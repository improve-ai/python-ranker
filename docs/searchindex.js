Search.setIndex({"docnames": ["improveai", "improveai.chooser", "improveai.cythonized_feature_encoding", "improveai.cythonized_feature_encoding.cythonized_feature_encoder", "improveai.feature_encoder", "improveai.ranker", "improveai.reward_tracker", "improveai.scorer", "improveai.settings", "improveai.utils", "improveai.utils.general_purpose_tools", "improveai.utils.gzip_tools", "improveai.utils.url_tools", "index", "modules", "readme"], "filenames": ["improveai.rst", "improveai.chooser.rst", "improveai.cythonized_feature_encoding.rst", "improveai.cythonized_feature_encoding.cythonized_feature_encoder.rst", "improveai.feature_encoder.rst", "improveai.ranker.rst", "improveai.reward_tracker.rst", "improveai.scorer.rst", "improveai.settings.rst", "improveai.utils.rst", "improveai.utils.general_purpose_tools.rst", "improveai.utils.gzip_tools.rst", "improveai.utils.url_tools.rst", "index.rst", "modules.rst", "readme.md"], "titles": ["improveai package", "chooser.py module", "improveai.cythonized_feature_encoding package", "cythonized_feature_encoder.pyx module", "feature_encoder.py module", "ranker.py module", "reward_tracker.py module", "scorer.py module", "settings.py module", "improveai.utils package", "general_purpose_tools.py module", "gzip_tools.py module", "url_tools.py module", "Welcome to Improve AI python ranker documentation!", "improveai", "Ranking, Scoring, Decisions, and Optimization with XGBoost"], "terms": {"cythonized_feature_encod": [0, 14], "pyx": [0, 2], "featureencod": [0, 1, 2, 3, 4, 13, 14], "stringtabl": [0, 2, 3, 4, 13, 14], "encode_candidates_to_matrix": [0, 1, 2, 3, 13], "get_mask": [0, 2, 3, 4, 13, 14], "get_noise_shift_scal": [0, 2, 3, 4, 13, 14], "scale": [0, 2, 3, 4, 13, 14], "sprinkl": [0, 1, 2, 3, 4, 13, 14], "util": [0, 5, 14, 15], "general_purpose_tool": [0, 9], "py": [0, 9, 14, 15], "read_jsonstring_from_fil": [0, 9, 10, 13], "check_candid": [0, 9, 10, 13], "is_valid_ksuid": [0, 9, 10, 13], "deepcopy_arg": [0, 9, 10, 13], "gzip_tool": [0, 9], "is_gz_byt": [0, 9, 11, 13], "get_unzipped_gz": [0, 9, 11, 13], "check_and_get_unzipped_model": [0, 9, 11, 13], "url_tool": [0, 9], "is_path_http_addr": [0, 9, 12, 13], "get_model_bytes_from_url": [0, 9, 12, 13], "chooser": [0, 7, 13, 14], "user_defined_metadata_kei": [0, 1, 13, 14], "feature_names_metadata_kei": [0, 1, 13, 14], "xgbchooser": [0, 1, 7, 13, 14], "model_name_regexp": [0, 1, 13], "model_nam": [0, 1, 6, 13, 15], "imposed_nois": [0, 1, 13], "improveai_major_version_from_metadata": [0, 1, 13], "string_tables_metadata_kei": [0, 1, 13], "model_seed_metadata_kei": [0, 1, 13], "model_name_metadata_kei": [0, 1, 13], "created_at_metadata_kei": [0, 1, 13], "improve_ai_allowed_major_vers": [0, 1, 13], "version_metadata_kei": [0, 1, 13], "required_metadata_kei": [0, 1, 13], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 13, 15], "model": [0, 1, 3, 4, 5, 6, 7, 11, 12, 13, 15], "model_metadata": [0, 1, 13], "feature_encod": [0, 1, 13, 14], "feature_nam": [0, 1, 3, 4, 13], "current_nois": [0, 1, 13], "load_model": [0, 1, 13], "_get_nois": [0, 1, 13], "score": [0, 1, 5, 6, 7, 13], "calculate_predict": [0, 1, 13], "encode_candidates_with_context": [0, 1, 13], "get_model_src": [0, 1, 13], "_get_improveai_major_vers": [0, 1, 13], "_get_model_metadata": [0, 1, 13], "_get_model_feature_nam": [0, 1, 13], "_get_model_se": [0, 1, 13], "_get_model_nam": [0, 1, 13], "_get_string_t": [0, 1, 13], "item_feature_kei": [0, 4, 13, 14], "context_feature_kei": [0, 4, 13, 14], "feature_index": [0, 2, 3, 4, 13], "string_tabl": [0, 1, 2, 3, 4, 13], "_check_into": [0, 4, 13], "encode_item": [0, 2, 3, 4, 13], "encode_context": [0, 2, 3, 4, 13], "encode_feature_vector": [0, 2, 3, 4, 13], "_encod": [0, 2, 3, 4, 13], "model_se": [0, 2, 3, 4, 13], "mask": [0, 2, 3, 4, 13], "miss_width": [0, 2, 3, 4, 13], "value_t": [0, 2, 3, 4, 13], "encod": [0, 1, 2, 3, 4, 5, 6, 7, 13, 15], "encode_miss": [0, 2, 3, 4, 13], "ranker": [0, 14, 15], "scorer": [0, 5, 13, 14, 15], "model_url": [0, 5, 7, 12, 13, 15], "rank": [0, 5, 13], "reward_track": [0, 14, 15], "rewardtrack": [0, 6, 13, 14, 15], "model_kei": [0, 6, 13], "message_id_kei": [0, 6, 13], "item_kei": [0, 6, 13], "context_kei": [0, 6, 13], "reward_kei": [0, 6, 13], "reward_id_kei": [0, 6, 13], "api_key_head": [0, 6, 13], "payload_for_error_kei": [0, 6, 13], "request_error_code_kei": [0, 6, 13], "items_count_kei": [0, 6, 13], "sample_kei": [0, 6, 13], "threaded_request": [0, 6, 13], "track_url": [0, 6, 13, 15], "api_kei": [0, 6, 13], "_get_track_bodi": [0, 6, 13], "_get_sampl": [0, 6, 13], "track": [0, 6, 13, 15], "track_with_sampl": [0, 6, 13, 15], "add_reward": [0, 6, 13, 15], "_is_valid_message_id": [0, 6, 13], "do_post_improve_request": [0, 6, 13], "post_improve_request": [0, 6, 13], "tiebreaker_multipli": [0, 7, 13], "set": [0, 1, 5, 7, 13, 14], "gcc_and_py3_dev_instal": [0, 8, 13, 14], "cython_backend_avail": [0, 8, 13, 14], "debug": [0, 1, 8, 13, 14], "user_defined_metadata": 1, "kei": [1, 3, 4, 6, 15], "us": [1, 3, 4, 5, 6, 7, 15], "store": [1, 3, 4, 6], "improv": [1, 5, 6, 7], "ai": [1, 5, 6, 7, 15], "metadata": 1, "insid": 1, "booster": [1, 5, 7], "attr": 1, "featur": [1, 3, 4], "name": [1, 3, 4, 6, 15], "dure": [1, 3, 4, 5, 6, 7], "": [1, 3, 4, 5, 6, 7, 15], "save": 1, "procedur": 1, "ar": [1, 3, 4, 5, 6, 7, 8, 10, 15], "truncat": 1, "from": [1, 3, 4, 6, 7, 10, 12, 15], "class": [1, 3, 4, 5, 6, 7, 15], "base": [1, 3, 4, 5, 6, 7, 15], "object": [1, 3, 4, 5, 6, 7, 15], "za": [1, 6], "z0": [1, 6], "9": [1, 6], "w": [1, 6], "0": [1, 3, 4, 6, 7, 15], "63": [1, 6], "regexp": 1, "verifi": 1, "all": [1, 3, 4, 6, 15], "both": [1, 5, 7, 8, 15], "user": [1, 6], "provid": [1, 3, 4, 5, 6, 11, 12, 15], "cach": 1, "properti": [1, 4, 5, 6, 7], "thi": [1, 3, 4, 5, 6, 7, 12, 15], "return": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15], "type": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12], "str": [1, 3, 4, 5, 6, 7, 10, 11, 12, 15], "impos": 1, "nois": [1, 3, 4], "valu": [1, 3, 4, 6, 7, 10, 15], "need": [1, 3, 4], "sdk": [1, 8, 15], "valid": [1, 6, 10], "synthet": 1, "forc": 1, "float": [1, 3, 4, 6, 7, 15], "version": 1, "string": [1, 3, 4, 10, 11, 12, 15], "none": [1, 3, 4, 5, 6, 7, 15], "tabl": [1, 3, 4], "seed": [1, 3, 4], "creation": 1, "time": [1, 15], "created_at": 1, "latest": 1, "support": 1, "major": 1, "8": 1, "int": [1, 3, 4, 6, 15], "attribut": 1, "an": [1, 3, 4, 6, 7, 10, 15], "entir": 1, "defin": 1, "dict": [1, 3, 4, 6, 10, 15], "expect": 1, "requir": 1, "list": [1, 3, 4, 5, 6, 7, 10, 15], "present": 1, "initi": [1, 3, 4, 5, 7], "xgboost": [1, 5, 7], "current": [1, 3, 4], "input_model_src": 1, "verbos": 1, "fals": [1, 6, 8, 10, 12], "load": [1, 10], "desir": [1, 4, 10], "input": [1, 3, 4, 10, 11], "path": [1, 3, 4, 5, 7, 11, 12], "paramet": [1, 3, 4, 5, 6, 7, 10, 11, 12, 15], "url": [1, 5, 6, 7, 12, 13, 15], "bool": [1, 6, 8, 10, 11, 12, 15], "should": [1, 3, 4, 6, 8, 10, 15], "i": [1, 3, 4, 5, 6, 8, 10, 11, 12, 15], "print": [1, 6], "messag": [1, 6, 8, 15], "privat": 1, "getter": 1, "can": [1, 5, 6, 7, 15], "manual": 1, "wa": [1, 6, 15], "test": 1, "purpos": [1, 13], "pleas": [1, 7, 15], "note": 1, "natur": 1, "flow": 1, "randomli": [1, 6, 15], "sampl": [1, 6, 7, 15], "1": [1, 3, 4, 6, 7, 15], "uniform": 1, "distribut": 1, "candid": [1, 3, 4, 6, 10, 15], "context": [1, 3, 4, 5, 6, 7, 15], "2d": [1, 3], "np": [1, 3, 4, 5, 6, 7, 10, 15], "arrai": [1, 3, 4, 7, 15], "given": [1, 3, 4, 5, 6, 7, 15], "tupl": [1, 3, 4, 5, 6, 7, 10, 15], "ndarrai": [1, 3, 4, 5, 6, 7, 10, 15], "json": [1, 3, 4, 5, 6, 7, 10, 15], "item": [1, 3, 4, 5, 6, 7, 10, 15], "numpi": [1, 3, 4], "kwarg": 1, "calcul": [1, 5], "2": [1, 3, 4], "step": 1, "predict": 1, "1d": 1, "features_matrix": 1, "matrix": 1, "sourc": [1, 11, 12], "dmatrix": 1, "doubl": [1, 3, 7, 10, 15], "implement": [1, 15], "helper": [1, 6, 10], "method": [1, 6, 10, 15], "cython": [1, 8], "backend": [1, 8], "speed": 1, "thing": 1, "up": 1, "possibl": [1, 6], "collect": [1, 5, 6, 10, 15], "variant": [1, 3, 4, 6, 10, 15], "static": 1, "model_src": [1, 11], "f": [1, 5, 7, 15], "unzip": [1, 11], "bytesarrai": 1, "gzip": [1, 5, 7, 11, 13, 15], "lead": [1, 5, 7], "output": 1, "pass": [1, 6, 15], "directli": 1, "byte": [1, 3, 4, 11, 12], "pth": [1, 10], "download": [1, 12], "bytearrai": 1, "extract": 1, "allow": [1, 5, 7], "dictionari": 1, "contain": [1, 6], "get": [1, 5, 6, 7, 12, 15], "vector": [3, 4], "order": [3, 4, 5, 15], "matter": [3, 4], "first": [3, 4, 15], "map": [3, 4], "hash": [3, 4], "rais": [3, 4, 6], "valueerror": [3, 4], "corrupt": [3, 4], "serializ": [3, 4], "rule": [3, 4], "go": [3, 4], "follow": [3, 4, 15], "null": [3, 4], "nan": [3, 4, 6, 15], "treat": [3, 4], "miss": [3, 4], "ignor": [3, 4], "number": [3, 4, 6, 7, 15], "boolean": [3, 4, 6], "lookup": [3, 4], "obj": [3, 4], "flat": [3, 4], "structur": [3, 4, 15], "ndim": 3, "mode": [3, 10], "c": 3, "which": [3, 4, 6, 15], "noise_shift": [3, 4], "small": [3, 4, 7], "bia": [3, 4], "ad": [3, 4, 7], "noise_scal": [3, 4], "multipli": [3, 4, 7], "python": [3, 4, 8, 15], "result": [3, 4, 10], "shift": [3, 4], "fulli": [3, 4], "must": [3, 4, 5, 6, 15], "combin": [3, 4], "A": [3, 4, 5, 15], "between": [3, 4], "index": [3, 4, 13], "creat": [3, 4, 6, 15], "simpl": [3, 4, 15], "iter": [3, 4], "enumer": [3, 4], "over": [3, 4, 15], "The": [3, 4, 5, 6, 15], "element": [3, 4], "constructor": [3, 4, 5], "respons": [3, 4], "target": [3, 4], "init": [3, 4, 5, 7, 15], "param": [3, 4, 5, 7, 15], "each": [3, 4, 5, 6, 7, 15], "string_hash": [3, 4], "unsign": 3, "long": 3, "At": [3, 4], "most": [3, 4, 5, 7], "64": [3, 4], "bit": [3, 4, 15], "represent": [3, 4], "e": [3, 4], "g": [3, 4], "000": [3, 4], "00111": [3, 4], "repres": [3, 4, 7, 15], "snap": [3, 4], "width": [3, 4], "interv": [3, 4], "numer": [3, 4, 6, 15], "unknown": [3, 4], "It": [3, 4], "center": [3, 4], "32": [3, 4], "random": [3, 4, 6, 7, 15], "integ": [3, 4, 15], "xxhash": [3, 4], "binari": [3, 4], "assum": [3, 4], "within": [3, 4, 6, 15], "rang": [3, 4], "val": [3, 4], "add": [3, 4, 6, 15], "x": [3, 4], "prefix": 4, "deriv": 4, "check": [4, 6, 7, 8, 10, 11, 12, 15], "ha": 4, "float64": [4, 7, 15], "dtype": 4, "normal": 4, "decreas": 4, "struct": [5, 15], "take": [5, 15], "improveai": [5, 6, 15], "evalu": [5, 15], "If": [5, 6, 11, 15], "prefer": [5, 15], "local": [5, 7, 15], "raw": [5, 7], "file": [5, 7, 10, 11], "commonli": [5, 7], "have": [5, 7, 15], "xgb": [5, 7], "extens": [5, 7], "well": [5, 7], "gz": [5, 7, 11], "onli": [5, 7], "either": [5, 6, 11, 15], "plain": [5, 7, 15], "compress": [5, 7, 11, 15], "resourc": [5, 7, 13], "them": [5, 15], "best": [5, 6, 15], "worst": [5, 15], "ani": [5, 6, 7, 15], "extra": [5, 6, 7, 15], "info": [5, 6, 7, 15], "its": [5, 6, 7, 15], "sort": [5, 15], "descend": [5, 15], "reward": [6, 13], "train": [6, 15], "updat": [6, 15], "when": [6, 15], "becom": [6, 15], "causal": [6, 15], "function": [6, 10, 15], "reward_id": [6, 15], "futur": [6, 15], "associ": [6, 15], "under": 6, "request": [6, 10, 15], "bodi": [6, 10], "id": [6, 10, 15], "message_id": 6, "decision_id": 6, "decis": 6, "header": [6, 8], "api": [6, 15], "caus": 6, "error": [6, 15], "code": [6, 15], "count": 6, "flag": [6, 11, 15], "indic": [6, 8, 11, 15], "whether": [6, 15], "execut": [6, 15], "threadpoolexecutor": 6, "true": [6, 8, 10, 11, 12, 15], "non": [6, 15], "block": 6, "thread": [6, 15], "consecut": 6, "aw": [6, 15], "endpoint": [6, 15], "blockng": [6, 15], "track_api_kei": [6, 15], "_threaded_request": [6, 15], "specif": [6, 15], "song": [6, 15], "discount": [6, 15], "make": [6, 15], "being": [6, 11, 15], "data": [6, 15], "sent": [6, 15], "applic": [6, 15], "sub": [6, 15], "default": [6, 10, 15], "regex": 6, "num_candid": [6, 15], "_post_improve_request": 6, "select": [6, 15], "exclud": 6, "assertionerror": 6, "len": [6, 15], "nto": 6, "remain": [6, 15], "chosen": [6, 15], "happen": [6, 15], "append": [6, 15], "contrari": [6, 15], "where": [6, 15], "total": [6, 15], "includ": [6, 15], "ro": [6, 15], "inf": [6, 15], "ksuid": [6, 10], "otherwis": [6, 8, 10, 12, 15], "payload_json": 6, "post": 6, "payload": 6, "dump": 6, "body_valu": 6, "tracker": [6, 15], "In": 6, "case": 6, "except": 6, "process": [6, 15], "doe": [6, 15], "break": 6, "main": 6, "just": [6, 15], "warn": 6, "differ": [6, 15], "option": [7, 15], "more": 7, "tab": 7, "uniformli": 7, "gcc": 8, "python3": 8, "instal": [8, 13], "usabl": 8, "level": 8, "shown": 8, "path_to_fil": 10, "r": 10, "readlin": 10, "decode_escape_char": 10, "safe": 10, "read": 10, "escap": 10, "repalc": 10, "singl": 10, "thei": 10, "empti": 10, "id_": 10, "arg": 10, "deepcopi": 10, "befor": 10, "now": 10, "asynchron": 10, "copi": 10, "those": 10, "could": 10, "yield": 10, "strang": 10, "lsit": 10, "checked_byt": 11, "stream": 11, "so": 11, "zip": 11, "to_be_unzipped_byt": 11, "one": [11, 15], "union": 11, "cna": 11, "decompress": 11, "http": 12, "address": 12, "about": 13, "instruct": 13, "chatgpt": 13, "usag": 13, "assign": 13, "contextu": 13, "help": 13, "our": 13, "world": 13, "cythonizedfeatureencod": 13, "gener": 13, "tool": 13, "modul": [13, 14], "search": 13, "page": [13, 15], "packag": 14, "subpackag": 14, "submodul": 14, "content": 14, "machin": 15, "learn": 15, "platform": 15, "quickli": 15, "app": 15, "person": 15, "recommend": 15, "io": 15, "android": 15, "immedi": 15, "zero": 15, "network": 15, "latenc": 15, "trainer": 15, "regularli": 15, "continu": 15, "pip3": 15, "past": 15, "your": 15, "prompt": 15, "write": 15, "against": 15, "document": 15, "import": 15, "simpli": 15, "respond": 15, "def": 15, "self": 15, "consult": 15, "out": 15, "ste": 15, "call": 15, "For": 15, "instanc": 15, "bedtim": 15, "stori": 15, "you": 15, "mai": 15, "titl": 15, "author": 15, "page_count": 15, "123": 15, "exampl": 15, "To": 15, "obtain": 15, "line": 15, "ranked_stori": 15, "easili": 15, "reinforc": 15, "later": 15, "posit": 15, "outcom": 15, "occur": 15, "purchas": 15, "profit": 15, "favor": 15, "carrot": 15, "neg": 15, "undesir": 15, "stick": 15, "By": 15, "busi": 15, "metric": 15, "revenu": 15, "convers": 15, "system": 15, "turn": 15, "multi": 15, "arm": 15, "bandit": 15, "mean": 15, "consid": 15, "often": 15, "choic": 15, "depend": 15, "made": 15, "let": 15, "greet": 15, "dai": 15, "good": 15, "morn": 15, "afternoon": 15, "even": 15, "bueno": 15, "d\u00eda": 15, "buena": 15, "tard": 15, "noch": 15, "also": 15, "day_tim": 15, "12": 15, "languag": 15, "en": 15, "appropri": 15, "would": 15, "scratch": 15, "quick": 15, "start": 15, "guid": 15, "mission": 15, "corner": 15, "littl": 15, "better": 15, "u": 15, "whole": 15, "product": 15, "work": 15, "do": 15, "welcom": 15, "hope": 15, "find": 15, "my": 15, "labor": 15, "love": 15, "justin": 15, "chapwesk": 15}, "objects": {"": [[0, 0, 0, "-", "improveai"]], "improveai": [[1, 0, 0, "-", "chooser"], [2, 0, 0, "-", "cythonized_feature_encoding"], [4, 0, 0, "-", "feature_encoder"], [5, 0, 0, "-", "ranker"], [6, 0, 0, "-", "reward_tracker"], [7, 0, 0, "-", "scorer"], [8, 0, 0, "-", "settings"], [9, 0, 0, "-", "utils"]], "improveai.chooser": [[1, 1, 1, "", "FEATURE_NAMES_METADATA_KEY"], [1, 1, 1, "", "USER_DEFINED_METADATA_KEY"], [1, 2, 1, "", "XGBChooser"]], "improveai.chooser.XGBChooser": [[1, 3, 1, "", "CREATED_AT_METADATA_KEY"], [1, 3, 1, "", "FEATURE_NAMES_METADATA_KEY"], [1, 3, 1, "", "IMPROVE_AI_ALLOWED_MAJOR_VERSION"], [1, 3, 1, "", "MODEL_NAME_METADATA_KEY"], [1, 4, 1, "", "MODEL_NAME_REGEXP"], [1, 3, 1, "", "MODEL_SEED_METADATA_KEY"], [1, 3, 1, "", "REQUIRED_METADATA_KEYS"], [1, 3, 1, "", "STRING_TABLES_METADATA_KEY"], [1, 3, 1, "", "USER_DEFINED_METADATA_KEY"], [1, 3, 1, "", "VERSION_METADATA_KEY"], [1, 5, 1, "", "__init__"], [1, 5, 1, "", "_get_improveai_major_version"], [1, 5, 1, "", "_get_model_feature_names"], [1, 5, 1, "", "_get_model_metadata"], [1, 5, 1, "", "_get_model_name"], [1, 5, 1, "", "_get_model_seed"], [1, 5, 1, "", "_get_noise"], [1, 5, 1, "", "_get_string_tables"], [1, 5, 1, "", "calculate_predictions"], [1, 3, 1, "", "current_noise"], [1, 5, 1, "", "encode_candidates_to_matrix"], [1, 5, 1, "", "encode_candidates_with_context"], [1, 3, 1, "", "feature_encoder"], [1, 3, 1, "", "feature_names"], [1, 5, 1, "", "get_model_src"], [1, 3, 1, "", "imposed_noise"], [1, 3, 1, "", "improveai_major_version_from_metadata"], [1, 5, 1, "", "load_model"], [1, 3, 1, "", "model"], [1, 3, 1, "", "model_metadata"], [1, 3, 1, "", "model_name"], [1, 5, 1, "", "score"]], "improveai.cythonized_feature_encoding": [[3, 0, 0, "-", "cythonized_feature_encoder"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder": [[3, 2, 1, "", "FeatureEncoder"], [3, 2, 1, "", "StringTable"], [3, 6, 1, "", "encode_candidates_to_matrix"], [3, 6, 1, "", "get_mask"], [3, 6, 1, "", "get_noise_shift_scale"], [3, 6, 1, "", "scale"], [3, 6, 1, "", "sprinkle"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder": [[3, 5, 1, "", "__init__"], [3, 5, 1, "", "_encode"], [3, 5, 1, "", "encode_context"], [3, 5, 1, "", "encode_feature_vector"], [3, 5, 1, "", "encode_item"], [3, 4, 1, "", "feature_indexes"], [3, 4, 1, "", "string_tables"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable": [[3, 5, 1, "", "__init__"], [3, 5, 1, "", "encode"], [3, 5, 1, "", "encode_miss"], [3, 4, 1, "", "mask"], [3, 4, 1, "", "miss_width"], [3, 4, 1, "", "model_seed"], [3, 4, 1, "", "value_table"]], "improveai.feature_encoder": [[4, 1, 1, "", "CONTEXT_FEATURE_KEY"], [4, 2, 1, "", "FeatureEncoder"], [4, 1, 1, "", "ITEM_FEATURE_KEY"], [4, 2, 1, "", "StringTable"], [4, 6, 1, "", "get_mask"], [4, 6, 1, "", "get_noise_shift_scale"], [4, 6, 1, "", "scale"], [4, 6, 1, "", "sprinkle"]], "improveai.feature_encoder.FeatureEncoder": [[4, 5, 1, "", "__init__"], [4, 5, 1, "", "_check_into"], [4, 5, 1, "", "_encode"], [4, 5, 1, "", "encode_context"], [4, 5, 1, "", "encode_feature_vector"], [4, 5, 1, "", "encode_item"], [4, 3, 1, "", "feature_indexes"], [4, 3, 1, "", "string_tables"]], "improveai.feature_encoder.StringTable": [[4, 5, 1, "", "__init__"], [4, 5, 1, "", "encode"], [4, 5, 1, "", "encode_miss"], [4, 3, 1, "", "mask"], [4, 3, 1, "", "miss_width"], [4, 3, 1, "", "model_seed"], [4, 3, 1, "", "value_table"]], "improveai.ranker": [[5, 2, 1, "", "Ranker"]], "improveai.ranker.Ranker": [[5, 5, 1, "", "__init__"], [5, 3, 1, "", "model_url"], [5, 5, 1, "", "rank"], [5, 3, 1, "", "scorer"]], "improveai.reward_tracker": [[6, 2, 1, "", "RewardTracker"]], "improveai.reward_tracker.RewardTracker": [[6, 3, 1, "", "API_KEY_HEADER"], [6, 3, 1, "", "CONTEXT_KEY"], [6, 3, 1, "", "ITEMS_COUNT_KEY"], [6, 3, 1, "", "ITEM_KEY"], [6, 3, 1, "", "MESSAGE_ID_KEY"], [6, 3, 1, "", "MODEL_KEY"], [6, 3, 1, "", "PAYLOAD_FOR_ERROR_KEY"], [6, 3, 1, "", "REQUEST_ERROR_CODE_KEY"], [6, 3, 1, "", "REWARD_ID_KEY"], [6, 3, 1, "", "REWARD_KEY"], [6, 3, 1, "", "SAMPLE_KEY"], [6, 5, 1, "", "__init__"], [6, 5, 1, "", "_get_sample"], [6, 5, 1, "", "_get_track_body"], [6, 5, 1, "", "_is_valid_message_id"], [6, 5, 1, "", "add_reward"], [6, 3, 1, "", "api_key"], [6, 5, 1, "", "do_post_improve_request"], [6, 3, 1, "", "model_name"], [6, 5, 1, "", "post_improve_request"], [6, 3, 1, "", "threaded_requests"], [6, 5, 1, "", "track"], [6, 3, 1, "", "track_url"], [6, 5, 1, "", "track_with_sample"]], "improveai.scorer": [[7, 2, 1, "", "Scorer"]], "improveai.scorer.Scorer": [[7, 3, 1, "", "TIEBREAKER_MULTIPLIER"], [7, 5, 1, "", "__init__"], [7, 3, 1, "", "chooser"], [7, 3, 1, "", "model_url"], [7, 5, 1, "", "score"]], "improveai.settings": [[8, 1, 1, "", "CYTHON_BACKEND_AVAILABLE"], [8, 1, 1, "", "DEBUG"], [8, 6, 1, "", "gcc_and_py3_dev_installed"]], "improveai.utils": [[10, 0, 0, "-", "general_purpose_tools"], [11, 0, 0, "-", "gzip_tools"], [12, 0, 0, "-", "url_tools"]], "improveai.utils.general_purpose_tools": [[10, 6, 1, "", "check_candidates"], [10, 6, 1, "", "deepcopy_args"], [10, 6, 1, "", "is_valid_ksuid"], [10, 6, 1, "", "read_jsonstring_from_file"]], "improveai.utils.gzip_tools": [[11, 6, 1, "", "check_and_get_unzipped_model"], [11, 6, 1, "", "get_unzipped_gz"], [11, 6, 1, "", "is_gz_bytes"]], "improveai.utils.url_tools": [[12, 6, 1, "", "get_model_bytes_from_url"], [12, 6, 1, "", "is_path_http_addr"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:property", "4": "py:attribute", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"improveai": [0, 2, 9, 14], "packag": [0, 2, 9], "subpackag": 0, "submodul": [0, 2, 9], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "content": [0, 2, 9], "chooser": 1, "py": [1, 4, 5, 6, 7, 8, 10, 11, 12], "cythonized_feature_encod": [2, 3], "pyx": 3, "feature_encod": 4, "ranker": [5, 13], "reward_track": 6, "scorer": 7, "set": 8, "util": [9, 13], "general_purpose_tool": 10, "gzip_tool": 11, "url_tool": 12, "welcom": 13, "improv": [13, 15], "ai": 13, "python": 13, "document": 13, "readm": 13, "class": 13, "indic": 13, "tabl": 13, "rank": 15, "score": 15, "decis": 15, "optim": 15, "xgboost": 15, "instal": 15, "instruct": 15, "chatgpt": 15, "usag": 15, "reward": 15, "assign": 15, "contextu": 15, "resourc": 15, "help": 15, "our": 15, "world": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"improveai package": [[0, "improveai-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [9, "submodules"]], "Module contents": [[0, "module-improveai"], [2, "module-improveai.cythonized_feature_encoding"], [9, "module-improveai.utils"]], "chooser.py module": [[1, "module-improveai.chooser"]], "improveai.cythonized_feature_encoding package": [[2, "improveai-cythonized-feature-encoding-package"]], "cythonized_feature_encoder.pyx module": [[3, "module-improveai.cythonized_feature_encoding.cythonized_feature_encoder"]], "feature_encoder.py module": [[4, "module-improveai.feature_encoder"]], "ranker.py module": [[5, "module-improveai.ranker"]], "reward_tracker.py module": [[6, "module-improveai.reward_tracker"]], "scorer.py module": [[7, "module-improveai.scorer"]], "settings.py module": [[8, "module-improveai.settings"]], "improveai.utils package": [[9, "improveai-utils-package"]], "general_purpose_tools.py module": [[10, "module-improveai.utils.general_purpose_tools"]], "gzip_tools.py module": [[11, "module-improveai.utils.gzip_tools"]], "url_tools.py module": [[12, "module-improveai.utils.url_tools"]], "Welcome to Improve AI python ranker documentation!": [[13, "welcome-to-improve-ai-python-ranker-documentation"]], "Readme:": [[13, null]], "Classes:": [[13, null]], "Utils:": [[13, null]], "Indices and tables": [[13, "indices-and-tables"]], "improveai": [[14, "improveai"]], "Ranking, Scoring, Decisions, and Optimization with XGBoost": [[15, "ranking-scoring-decisions-and-optimization-with-xgboost"]], "Installation": [[15, "installation"]], "Instructions for ChatGPT": [[15, "instructions-for-chatgpt"]], "Usage": [[15, "usage"]], "Reward Assignment": [[15, "reward-assignment"]], "Contextual Ranking & Scoring": [[15, "contextual-ranking-scoring"]], "Resources": [[15, "resources"]], "Help Improve Our World": [[15, "help-improve-our-world"]]}, "indexentries": {"improveai": [[0, "module-improveai"]], "module": [[0, "module-improveai"], [1, "module-improveai.chooser"], [2, "module-improveai.cythonized_feature_encoding"], [3, "module-improveai.cythonized_feature_encoding.cythonized_feature_encoder"], [4, "module-improveai.feature_encoder"], [5, "module-improveai.ranker"], [6, "module-improveai.reward_tracker"], [7, "module-improveai.scorer"], [8, "module-improveai.settings"], [9, "module-improveai.utils"], [10, "module-improveai.utils.general_purpose_tools"], [11, "module-improveai.utils.gzip_tools"], [12, "module-improveai.utils.url_tools"]], "created_at_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.CREATED_AT_METADATA_KEY"]], "feature_names_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.FEATURE_NAMES_METADATA_KEY"]], "feature_names_metadata_key (in module improveai.chooser)": [[1, "improveai.chooser.FEATURE_NAMES_METADATA_KEY"]], "improve_ai_allowed_major_version (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.IMPROVE_AI_ALLOWED_MAJOR_VERSION"]], "model_name_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.MODEL_NAME_METADATA_KEY"]], "model_name_regexp (xgbchooser attribute)": [[1, "improveai.chooser.XGBChooser.MODEL_NAME_REGEXP"]], "model_seed_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.MODEL_SEED_METADATA_KEY"]], "required_metadata_keys (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.REQUIRED_METADATA_KEYS"]], "string_tables_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.STRING_TABLES_METADATA_KEY"]], "user_defined_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.USER_DEFINED_METADATA_KEY"]], "user_defined_metadata_key (in module improveai.chooser)": [[1, "improveai.chooser.USER_DEFINED_METADATA_KEY"]], "version_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.VERSION_METADATA_KEY"]], "xgbchooser (class in improveai.chooser)": [[1, "improveai.chooser.XGBChooser"]], "__init__() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.__init__"]], "_get_improveai_major_version() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_improveai_major_version"]], "_get_model_feature_names() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_feature_names"]], "_get_model_metadata() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_metadata"]], "_get_model_name() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_name"]], "_get_model_seed() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_seed"]], "_get_noise() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_noise"]], "_get_string_tables() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_string_tables"]], "calculate_predictions() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.calculate_predictions"]], "current_noise (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.current_noise"]], "encode_candidates_to_matrix() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.encode_candidates_to_matrix"]], "encode_candidates_with_context() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.encode_candidates_with_context"]], "feature_encoder (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.feature_encoder"]], "feature_names (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.feature_names"]], "get_model_src() (xgbchooser static method)": [[1, "improveai.chooser.XGBChooser.get_model_src"]], "imposed_noise (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.imposed_noise"]], "improveai.chooser": [[1, "module-improveai.chooser"]], "improveai_major_version_from_metadata (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.improveai_major_version_from_metadata"]], "load_model() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.load_model"]], "model (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.model"]], "model_metadata (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.model_metadata"]], "model_name (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.model_name"]], "score() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.score"]], "improveai.cythonized_feature_encoding": [[2, "module-improveai.cythonized_feature_encoding"]], "featureencoder (class in improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder"]], "stringtable (class in improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable"]], "__init__() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.__init__"], [4, "improveai.feature_encoder.FeatureEncoder.__init__"]], "__init__() (stringtable method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.__init__"], [4, "improveai.feature_encoder.StringTable.__init__"]], "_encode() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder._encode"], [4, "improveai.feature_encoder.FeatureEncoder._encode"]], "encode() (stringtable method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.encode"], [4, "improveai.feature_encoder.StringTable.encode"]], "encode_candidates_to_matrix() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.encode_candidates_to_matrix"]], "encode_context() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.encode_context"], [4, "improveai.feature_encoder.FeatureEncoder.encode_context"]], "encode_feature_vector() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.encode_feature_vector"], [4, "improveai.feature_encoder.FeatureEncoder.encode_feature_vector"]], "encode_item() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.encode_item"], [4, "improveai.feature_encoder.FeatureEncoder.encode_item"]], "encode_miss() (stringtable method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.encode_miss"], [4, "improveai.feature_encoder.StringTable.encode_miss"]], "feature_indexes (featureencoder attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.feature_indexes"]], "get_mask() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.get_mask"]], "get_noise_shift_scale() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.get_noise_shift_scale"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder": [[3, "module-improveai.cythonized_feature_encoding.cythonized_feature_encoder"]], "mask (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.mask"]], "miss_width (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.miss_width"]], "model_seed (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.model_seed"]], "scale() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.scale"]], "sprinkle() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.sprinkle"]], "string_tables (featureencoder attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.string_tables"]], "value_table (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.value_table"]], "context_feature_key (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.CONTEXT_FEATURE_KEY"]], "featureencoder (class in improveai.feature_encoder)": [[4, "improveai.feature_encoder.FeatureEncoder"]], "item_feature_key (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.ITEM_FEATURE_KEY"]], "stringtable (class in improveai.feature_encoder)": [[4, "improveai.feature_encoder.StringTable"]], "_check_into() (featureencoder method)": [[4, "improveai.feature_encoder.FeatureEncoder._check_into"]], "feature_indexes (featureencoder property)": [[4, "improveai.feature_encoder.FeatureEncoder.feature_indexes"]], "get_mask() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.get_mask"]], "get_noise_shift_scale() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.get_noise_shift_scale"]], "improveai.feature_encoder": [[4, "module-improveai.feature_encoder"]], "mask (stringtable property)": [[4, "improveai.feature_encoder.StringTable.mask"]], "miss_width (stringtable property)": [[4, "improveai.feature_encoder.StringTable.miss_width"]], "model_seed (stringtable property)": [[4, "improveai.feature_encoder.StringTable.model_seed"]], "scale() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.scale"]], "sprinkle() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.sprinkle"]], "string_tables (featureencoder property)": [[4, "improveai.feature_encoder.FeatureEncoder.string_tables"]], "value_table (stringtable property)": [[4, "improveai.feature_encoder.StringTable.value_table"]], "ranker (class in improveai.ranker)": [[5, "improveai.ranker.Ranker"]], "__init__() (ranker method)": [[5, "improveai.ranker.Ranker.__init__"]], "improveai.ranker": [[5, "module-improveai.ranker"]], "model_url (ranker property)": [[5, "improveai.ranker.Ranker.model_url"]], "rank() (ranker method)": [[5, "improveai.ranker.Ranker.rank"]], "scorer (ranker property)": [[5, "improveai.ranker.Ranker.scorer"]], "api_key_header (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.API_KEY_HEADER"]], "context_key (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.CONTEXT_KEY"]], "items_count_key (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.ITEMS_COUNT_KEY"]], "item_key (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.ITEM_KEY"]], "message_id_key (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.MESSAGE_ID_KEY"]], "model_key (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.MODEL_KEY"]], "payload_for_error_key (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.PAYLOAD_FOR_ERROR_KEY"]], "request_error_code_key (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.REQUEST_ERROR_CODE_KEY"]], "reward_id_key (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.REWARD_ID_KEY"]], "reward_key (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.REWARD_KEY"]], "rewardtracker (class in improveai.reward_tracker)": [[6, "improveai.reward_tracker.RewardTracker"]], "sample_key (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.SAMPLE_KEY"]], "__init__() (rewardtracker method)": [[6, "improveai.reward_tracker.RewardTracker.__init__"]], "_get_sample() (rewardtracker method)": [[6, "improveai.reward_tracker.RewardTracker._get_sample"]], "_get_track_body() (rewardtracker method)": [[6, "improveai.reward_tracker.RewardTracker._get_track_body"]], "_is_valid_message_id() (rewardtracker method)": [[6, "improveai.reward_tracker.RewardTracker._is_valid_message_id"]], "add_reward() (rewardtracker method)": [[6, "improveai.reward_tracker.RewardTracker.add_reward"]], "api_key (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.api_key"]], "do_post_improve_request() (rewardtracker method)": [[6, "improveai.reward_tracker.RewardTracker.do_post_improve_request"]], "improveai.reward_tracker": [[6, "module-improveai.reward_tracker"]], "model_name (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.model_name"]], "post_improve_request() (rewardtracker method)": [[6, "improveai.reward_tracker.RewardTracker.post_improve_request"]], "threaded_requests (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.threaded_requests"]], "track() (rewardtracker method)": [[6, "improveai.reward_tracker.RewardTracker.track"]], "track_url (rewardtracker property)": [[6, "improveai.reward_tracker.RewardTracker.track_url"]], "track_with_sample() (rewardtracker method)": [[6, "improveai.reward_tracker.RewardTracker.track_with_sample"]], "scorer (class in improveai.scorer)": [[7, "improveai.scorer.Scorer"]], "tiebreaker_multiplier (scorer property)": [[7, "improveai.scorer.Scorer.TIEBREAKER_MULTIPLIER"]], "__init__() (scorer method)": [[7, "improveai.scorer.Scorer.__init__"]], "chooser (scorer property)": [[7, "improveai.scorer.Scorer.chooser"]], "improveai.scorer": [[7, "module-improveai.scorer"]], "model_url (scorer property)": [[7, "improveai.scorer.Scorer.model_url"]], "score() (scorer method)": [[7, "improveai.scorer.Scorer.score"]], "cython_backend_available (in module improveai.settings)": [[8, "improveai.settings.CYTHON_BACKEND_AVAILABLE"]], "debug (in module improveai.settings)": [[8, "improveai.settings.DEBUG"]], "gcc_and_py3_dev_installed() (in module improveai.settings)": [[8, "improveai.settings.gcc_and_py3_dev_installed"]], "improveai.settings": [[8, "module-improveai.settings"]], "improveai.utils": [[9, "module-improveai.utils"]], "check_candidates() (in module improveai.utils.general_purpose_tools)": [[10, "improveai.utils.general_purpose_tools.check_candidates"]], "deepcopy_args() (in module improveai.utils.general_purpose_tools)": [[10, "improveai.utils.general_purpose_tools.deepcopy_args"]], "improveai.utils.general_purpose_tools": [[10, "module-improveai.utils.general_purpose_tools"]], "is_valid_ksuid() (in module improveai.utils.general_purpose_tools)": [[10, "improveai.utils.general_purpose_tools.is_valid_ksuid"]], "read_jsonstring_from_file() (in module improveai.utils.general_purpose_tools)": [[10, "improveai.utils.general_purpose_tools.read_jsonstring_from_file"]], "check_and_get_unzipped_model() (in module improveai.utils.gzip_tools)": [[11, "improveai.utils.gzip_tools.check_and_get_unzipped_model"]], "get_unzipped_gz() (in module improveai.utils.gzip_tools)": [[11, "improveai.utils.gzip_tools.get_unzipped_gz"]], "improveai.utils.gzip_tools": [[11, "module-improveai.utils.gzip_tools"]], "is_gz_bytes() (in module improveai.utils.gzip_tools)": [[11, "improveai.utils.gzip_tools.is_gz_bytes"]], "get_model_bytes_from_url() (in module improveai.utils.url_tools)": [[12, "improveai.utils.url_tools.get_model_bytes_from_url"]], "improveai.utils.url_tools": [[12, "module-improveai.utils.url_tools"]], "is_path_http_addr() (in module improveai.utils.url_tools)": [[12, "improveai.utils.url_tools.is_path_http_addr"]]}})