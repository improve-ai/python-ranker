Search.setIndex({"docnames": ["improveai", "improveai.chooser", "improveai.cythonized_feature_encoding", "improveai.cythonized_feature_encoding.cythonized_feature_encoder", "improveai.feature_encoder", "improveai.improve_cli", "improveai.ranker", "improveai.reward_tracker", "improveai.scorer", "improveai.settings", "improveai.utils", "improveai.utils.general_purpose_tools", "improveai.utils.gzip_tools", "improveai.utils.url_tools", "index", "modules", "readme"], "filenames": ["improveai.rst", "improveai.chooser.rst", "improveai.cythonized_feature_encoding.rst", "improveai.cythonized_feature_encoding.cythonized_feature_encoder.rst", "improveai.feature_encoder.rst", "improveai.improve_cli.rst", "improveai.ranker.rst", "improveai.reward_tracker.rst", "improveai.scorer.rst", "improveai.settings.rst", "improveai.utils.rst", "improveai.utils.general_purpose_tools.rst", "improveai.utils.gzip_tools.rst", "improveai.utils.url_tools.rst", "index.rst", "modules.rst", "readme.md"], "titles": ["improveai package", "chooser.py module", "improveai.cythonized_feature_encoding package", "cythonized_feature_encoder.pyx module", "feature_encoder.py module", "improve_cli.py module", "ranker.py module", "reward_tracker.py module", "scorer.py module", "settings.py module", "improveai.utils package", "general_purpose_tools.py module", "gzip_tools.py module", "url_tools.py module", "Welcome to Improve AI python ranker documentation!", "improveai", "Readme"], "terms": {"cythonized_feature_encod": [0, 15], "pyx": [0, 2], "featureencod": [0, 1, 2, 3, 4, 14, 15], "stringtabl": [0, 2, 3, 4, 14, 15], "encode_candidates_to_matrix": [0, 1, 2, 3, 14], "get_mask": [0, 2, 3, 4, 14, 15], "get_noise_shift_scal": [0, 2, 3, 4, 14, 15], "scale": [0, 2, 3, 4, 14, 15], "sprinkl": [0, 1, 2, 3, 4, 14, 15], "util": [0, 15], "general_purpose_tool": [0, 10], "py": [0, 10, 15], "read_jsonstring_from_fil": [0, 10, 11, 14], "check_candid": [0, 10, 11, 14], "is_valid_ksuid": [0, 10, 11, 14], "deepcopy_arg": [0, 10, 11, 14], "gzip_tool": [0, 10], "is_gz_byt": [0, 10, 12, 14], "get_unzipped_gz": [0, 10, 12, 14], "check_and_get_unzipped_model": [0, 10, 12, 14], "url_tool": [0, 10], "is_path_http_addr": [0, 10, 13, 14], "get_model_bytes_from_url": [0, 10, 13, 14], "chooser": [0, 8, 14, 15], "user_defined_metadata_kei": [0, 1, 14, 15], "feature_names_metadata_kei": [0, 1, 14, 15], "xgbchooser": [0, 1, 8, 14, 15], "model_name_regexp": [0, 1, 14], "model_nam": [0, 1, 7, 14], "imposed_nois": [0, 1, 14], "improveai_major_version_from_metadata": [0, 1, 14], "string_tables_metadata_kei": [0, 1, 14], "model_seed_metadata_kei": [0, 1, 14], "model_name_metadata_kei": [0, 1, 14], "created_at_metadata_kei": [0, 1, 14], "improve_ai_allowed_major_vers": [0, 1, 14], "version_metadata_kei": [0, 1, 14], "required_metadata_kei": [0, 1, 14], "__init__": [0, 1, 2, 3, 4, 6, 7, 8, 14], "model": [0, 1, 3, 4, 6, 7, 8, 12, 13, 14, 16], "model_metadata": [0, 1, 14], "feature_encod": [0, 1, 14, 15], "feature_nam": [0, 1, 3, 4, 14], "current_nois": [0, 1, 14], "load_model": [0, 1, 14, 16], "_get_nois": [0, 1, 14], "score": [0, 1, 6, 8, 14], "calculate_predict": [0, 1, 14], "encode_candidates_with_context": [0, 1, 14], "get_model_src": [0, 1, 14], "_get_improveai_major_vers": [0, 1, 14], "_get_model_metadata": [0, 1, 14], "_get_model_feature_nam": [0, 1, 14], "_get_model_se": [0, 1, 14], "_get_model_nam": [0, 1, 14], "_get_string_t": [0, 1, 14], "item_feature_kei": [0, 4, 14, 15], "context_feature_kei": [0, 4, 14, 15], "feature_index": [0, 2, 3, 4, 14], "string_tabl": [0, 1, 2, 3, 4, 14], "_check_into": [0, 4, 14], "encode_item": [0, 2, 3, 4, 14], "encode_context": [0, 2, 3, 4, 14], "encode_feature_vector": [0, 2, 3, 4, 14], "_encod": [0, 2, 3, 4, 14], "model_se": [0, 2, 3, 4, 14], "mask": [0, 2, 3, 4, 14], "miss_width": [0, 2, 3, 4, 14], "value_t": [0, 2, 3, 4, 14], "encod": [0, 1, 2, 3, 4, 6, 7, 8, 14, 16], "encode_miss": [0, 2, 3, 4, 14], "improve_cli": [0, 15], "ranker": [0, 15], "supported_cal": [0, 6, 14], "scorer": [0, 6, 14, 15], "model_url": [0, 6, 8, 13, 14, 16], "rank": [0, 6, 14], "reward_track": [0, 15], "rewardtrack": [0, 7, 14, 15], "model_kei": [0, 7, 14], "message_id_kei": [0, 7, 14], "item_kei": [0, 7, 14], "context_kei": [0, 7, 14], "reward_kei": [0, 7, 14], "reward_id_kei": [0, 7, 14], "api_key_head": [0, 7, 14], "payload_for_error_kei": [0, 7, 14], "request_error_code_kei": [0, 7, 14], "items_count_kei": [0, 7, 14], "sample_kei": [0, 7, 14], "threaded_request": [0, 7, 14], "track_url": [0, 7, 14, 16], "api_kei": [0, 7, 14], "_get_track_bodi": [0, 7, 14], "_get_sampl": [0, 7, 14], "track": [0, 7, 14, 16], "track_with_sampl": [0, 7, 14], "add_reward": [0, 7, 14, 16], "_is_valid_message_id": [0, 7, 14], "do_post_improve_request": [0, 7, 14], "post_improve_request": [0, 7, 14], "tiebreaker_multipli": [0, 8, 14], "set": [0, 1, 6, 8, 14, 15], "gcc_and_py3_dev_instal": [0, 9, 14, 15], "cython_backend_avail": [0, 9, 14, 15], "debug": [0, 1, 9, 14, 15], "user_defined_metadata": 1, "kei": [1, 3, 4, 7, 16], "us": [1, 3, 4, 6, 7, 8, 16], "store": [1, 3, 4, 7], "improv": [1, 6, 7, 8], "ai": [1, 6, 7, 8, 16], "metadata": 1, "insid": 1, "booster": [1, 6, 8], "attr": 1, "featur": [1, 3, 4, 16], "name": [1, 3, 4, 7], "dure": [1, 3, 4, 6, 7, 8], "": [1, 3, 4, 6, 7, 8, 16], "save": 1, "procedur": 1, "ar": [1, 3, 4, 6, 7, 8, 9, 11, 16], "truncat": 1, "from": [1, 3, 4, 7, 8, 11, 13, 16], "class": [1, 3, 4, 6, 7, 8], "base": [1, 3, 4, 6, 7, 8], "object": [1, 3, 4, 6, 7, 8, 16], "za": [1, 7], "z0": [1, 7], "9": [1, 7], "w": [1, 7], "0": [1, 3, 4, 7, 8, 16], "63": [1, 7], "regexp": 1, "verifi": 1, "all": [1, 3, 4, 16], "both": [1, 6, 8, 9], "user": [1, 7], "provid": [1, 3, 4, 6, 7, 8, 12, 13, 16], "cach": 1, "properti": [1, 4, 6, 7, 8, 16], "thi": [1, 3, 4, 6, 7, 8, 13, 16], "return": [1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 16], "type": [1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14], "str": [1, 3, 4, 6, 7, 8, 11, 12, 13], "impos": 1, "nois": [1, 3, 4], "valu": [1, 3, 4, 7, 8, 11, 16], "need": [1, 3, 4], "sdk": [1, 9, 16], "valid": [1, 7, 11, 16], "synthet": 1, "forc": 1, "float": [1, 3, 4, 7, 8], "version": 1, "string": [1, 3, 4, 11, 12, 13, 16], "none": [1, 3, 4, 6, 7, 8, 16], "tabl": [1, 3, 4, 16], "seed": [1, 3, 4], "creation": 1, "time": [1, 16], "created_at": 1, "latest": [1, 16], "support": [1, 6], "major": 1, "8": 1, "int": [1, 3, 4, 7], "attribut": 1, "an": [1, 3, 4, 7, 8, 11, 16], "entir": 1, "defin": 1, "dict": [1, 3, 4, 7, 11, 16], "expect": [1, 16], "requir": 1, "list": [1, 3, 4, 6, 7, 8, 11, 16], "present": 1, "initi": [1, 3, 4, 6, 8, 14], "xgboost": [1, 6, 8], "current": [1, 3, 4, 6, 16], "input_model_src": 1, "verbos": 1, "fals": [1, 7, 9, 11, 13, 16], "load": [1, 11], "desir": [1, 4, 11], "input": [1, 3, 4, 7, 11, 12], "path": [1, 3, 4, 6, 8, 12, 13], "paramet": [1, 3, 4, 6, 7, 8, 11, 12, 13], "url": [1, 6, 7, 8, 13, 14, 16], "bool": [1, 7, 9, 11, 12, 13], "should": [1, 3, 4, 7, 9, 11, 16], "i": [1, 3, 4, 6, 7, 9, 11, 12, 13, 16], "print": [1, 7], "messag": [1, 7, 9], "privat": 1, "getter": 1, "can": [1, 6, 7, 8, 16], "manual": 1, "wa": 1, "test": [1, 16], "purpos": [1, 14], "pleas": [1, 8], "note": [1, 16], "natur": 1, "flow": 1, "randomli": [1, 7], "sampl": [1, 7, 8], "1": [1, 3, 4, 7, 8, 16], "uniform": 1, "distribut": 1, "candid": [1, 3, 4, 7, 11], "context": [1, 3, 4, 6, 7, 8, 16], "2d": [1, 3], "np": [1, 3, 4, 6, 7, 8, 11], "arrai": [1, 3, 4, 8], "given": [1, 3, 4, 7, 16], "tupl": [1, 3, 4, 6, 7, 8, 11], "ndarrai": [1, 3, 4, 6, 7, 8, 11], "json": [1, 3, 4, 6, 7, 8, 11, 16], "item": [1, 3, 4, 6, 7, 8, 11, 16], "numpi": [1, 3, 4], "kwarg": 1, "calcul": [1, 6, 8], "2": [1, 3, 4, 16], "step": 1, "predict": 1, "1d": 1, "features_matrix": 1, "matrix": 1, "sourc": [1, 12, 13], "dmatrix": 1, "implement": [1, 16], "helper": [1, 7, 11], "method": [1, 6, 7, 11], "cython": [1, 9], "backend": [1, 9], "speed": 1, "thing": 1, "up": 1, "possibl": [1, 7], "collect": [1, 6, 7, 11, 16], "variant": [1, 3, 4, 7, 11, 14], "static": 1, "model_src": [1, 12], "f": [1, 6, 8], "unzip": [1, 12], "bytesarrai": 1, "gzip": [1, 6, 8, 12, 14], "lead": [1, 6, 8], "output": 1, "pass": [1, 7], "directli": 1, "byte": [1, 3, 4, 12, 13], "pth": [1, 11], "download": [1, 13], "bytearrai": 1, "extract": 1, "allow": [1, 6, 8], "dictionari": [1, 16], "contain": [1, 7], "get": [1, 13], "vector": [3, 4], "order": [3, 4, 6], "matter": [3, 4], "first": [3, 4, 16], "map": [3, 4, 16], "hash": [3, 4], "rais": [3, 4, 7], "valueerror": [3, 4], "corrupt": [3, 4], "serializ": [3, 4], "rule": [3, 4], "go": [3, 4], "follow": [3, 4, 16], "null": [3, 4], "nan": [3, 4], "treat": [3, 4], "miss": [3, 4], "ignor": [3, 4], "number": [3, 4, 7, 8, 16], "boolean": [3, 4, 7], "lookup": [3, 4], "obj": [3, 4], "flat": [3, 4], "structur": [3, 4, 16], "doubl": [3, 8, 11], "ndim": 3, "mode": [3, 11, 16], "c": 3, "which": [3, 4, 7, 16], "noise_shift": [3, 4], "small": [3, 4, 8], "bia": [3, 4], "ad": [3, 4, 8], "noise_scal": [3, 4], "multipli": [3, 4, 8], "python": [3, 4, 9, 16], "result": [3, 4, 11, 16], "shift": [3, 4], "fulli": [3, 4], "must": [3, 4, 6, 7, 16], "combin": [3, 4], "A": [3, 4, 6, 16], "between": [3, 4], "index": [3, 4, 14], "creat": [3, 4, 7], "simpl": [3, 4, 16], "iter": [3, 4], "enumer": [3, 4], "over": [3, 4], "The": [3, 4, 16], "element": [3, 4], "constructor": [3, 4, 6], "respons": [3, 4], "target": [3, 4], "init": [3, 4, 6, 7, 8], "param": [3, 4, 6, 7, 8], "each": [3, 4, 16], "string_hash": [3, 4], "unsign": 3, "long": 3, "At": [3, 4, 16], "most": [3, 4, 6, 8, 16], "64": [3, 4], "bit": [3, 4, 16], "represent": [3, 4], "e": [3, 4], "g": [3, 4], "000": [3, 4], "00111": [3, 4], "repres": [3, 4, 7], "snap": [3, 4], "width": [3, 4], "interv": [3, 4], "numer": [3, 4], "unknown": [3, 4], "It": [3, 4, 16], "center": [3, 4], "32": [3, 4], "random": [3, 4, 7, 8], "integ": [3, 4], "xxhash": [3, 4], "binari": [3, 4], "assum": [3, 4], "within": [3, 4, 7, 16], "rang": [3, 4], "val": [3, 4], "add": [3, 4, 16], "x": [3, 4], "prefix": 4, "deriv": 4, "check": [4, 7, 8, 9, 11, 12, 13], "ha": 4, "float64": 4, "dtype": 4, "normal": 4, "decreas": 4, "cli": 6, "onli": [6, 8], "If": [6, 7, 12, 16], "prefer": 6, "local": [6, 8], "raw": [6, 8], "file": [6, 8, 11, 12], "commonli": [6, 8], "have": [6, 8], "xgb": [6, 8, 16], "extens": [6, 8], "well": [6, 8], "gz": [6, 8, 12, 16], "either": [6, 7, 12], "improveai": [6, 7, 8, 16], "them": 6, "best": [6, 7, 16], "worst": 6, "ani": [6, 7, 8, 16], "serv": [6, 8], "ident": 6, "under": 7, "request": [7, 11], "bodi": [7, 11], "id": [7, 11], "reward": [7, 16], "decis": [7, 14], "header": [7, 9], "api": [7, 16], "info": [7, 8], "caus": 7, "error": 7, "code": [7, 16], "count": 7, "flag": [7, 12, 16], "indic": [7, 9, 12], "whether": 7, "execut": [7, 16], "threadpoolexecutor": 7, "true": [7, 9, 11, 12, 13, 16], "non": 7, "block": 7, "thread": 7, "consecut": 7, "aw": [7, 16], "endpoint": 7, "blockng": 7, "track_api_kei": 7, "_threaded_request": 7, "make": [7, 16], "whose": 7, "being": [7, 12, 16], "nullabl": 7, "sub": 7, "default": [7, 11], "regex": 7, "applic": 7, "num_candid": 7, "_post_improve_request": 7, "select": 7, "exclud": 7, "assertionerror": 7, "len": 7, "nto": 7, "causal": 7, "system": [7, 16], "chosen": 7, "sent": 7, "happen": 7, "append": 7, "contrari": 7, "where": 7, "along": 7, "ste": 7, "reward_id": 7, "assign": [7, 16], "post": 7, "equal": 7, "ksuid": [7, 11], "message_id": 7, "otherwis": [7, 9, 11, 13, 16], "payload_json": 7, "payload": 7, "dump": 7, "body_valu": 7, "tracker": 7, "In": 7, "case": 7, "except": 7, "process": [7, 16], "doe": [7, 16], "break": 7, "main": 7, "just": 7, "warn": 7, "differ": 7, "more": 8, "tab": 8, "uniformli": 8, "gcc": 9, "python3": 9, "instal": [9, 14], "usabl": 9, "level": 9, "shown": 9, "path_to_fil": 11, "r": 11, "readlin": 11, "decode_escape_char": 11, "safe": 11, "read": 11, "escap": 11, "repalc": 11, "singl": [11, 16], "thei": 11, "empti": 11, "id_": 11, "arg": 11, "function": 11, "deepcopi": 11, "befor": 11, "now": 11, "asynchron": 11, "copi": 11, "those": 11, "could": 11, "yield": 11, "strang": 11, "lsit": 11, "checked_byt": 12, "stream": 12, "so": [12, 16], "zip": 12, "compress": 12, "to_be_unzipped_byt": 12, "one": 12, "union": 12, "cna": 12, "decompress": 12, "http": [13, 16], "address": 13, "about": 14, "usag": 14, "contextu": 14, "multivari": 14, "optim": 14, "privaci": 14, "resourc": 14, "help": 14, "our": 14, "world": 14, "cythonizedfeatureencod": 14, "gener": 14, "tool": 14, "modul": [14, 15], "search": [14, 16], "page": 14, "packag": 15, "subpackag": 15, "submodul": 15, "content": 15, "machin": 16, "learn": 16, "platform": 16, "quickli": 16, "app": 16, "person": 16, "recommend": 16, "io": 16, "android": 16, "immedi": 16, "devic": 16, "zero": 16, "network": 16, "latenc": 16, "cloud": 16, "gym": 16, "updat": 16, "train": 16, "regularli": 16, "sagemak": 16, "pip3": 16, "import": 16, "xxxx": 16, "lambda": 16, "u": 16, "east": 16, "s3": 16, "amazonaw": 16, "com": 16, "greet": 16, "greetings_model": 16, "heart": 16, "statement": 16, "like": 16, "decision_id": 16, "hello": 16, "howdi": 16, "hola": 16, "take": 16, "highest": 16, "condit": 16, "easili": 16, "reinforc": 16, "success": 16, "With": 16, "posit": 16, "outcom": 16, "carrot": 16, "neg": 16, "undesir": 16, "stick": 16, "automat": 16, "unlik": 16, "b": 16, "via": 16, "languag": 16, "cowboi": 16, "would": 16, "choic": 16, "fundament": 16, "task": 16, "engin": 16, "social": 16, "media": 16, "feed": 16, "fast": 16, "perform": 16, "line": 16, "ranked_win": 16, "sommelier_model": 16, "entre": 16, "wine": 16, "when": 16, "call": 16, "decid": 16, "easi": 16, "turn": 16, "databas": 16, "simpli": 16, "column": 16, "row": 16, "conversion_rate_model": 16, "queri": 16, "sort": 16, "descend": 16, "top": 16, "also": 16, "craft": 16, "custom": 16, "algorithm": 16, "supplement": 16, "metric": 16, "multi": 16, "stage": 16, "joint": 16, "multipl": 16, "variabl": 16, "simultan": 16, "often": 16, "configur": 16, "tune": 16, "config": 16, "config_model": 16, "buffer_s": 16, "1024": 16, "2048": 16, "4096": 16, "8192": 16, "video_bitr": 16, "256000": 16, "384000": 16, "512000": 16, "exampl": 16, "notic": 16, "instead": 16, "variat": 16, "jointli": 16, "credit": 16, "recent": 16, "made": 16, "includ": 16, "previou": 16, "session": 16, "data": 16, "arbitrari": 16, "complex": 16, "nest": 16, "assist": 16, "discount": 16, "discounts_model": 16, "3": 16, "enabl": 16, "feature_flag_model": 16, "filter_model": 16, "theme": 16, "font": 16, "helvetica": 16, "size": 16, "12": 16, "color": 16, "000000": 16, "comic": 16, "san": 16, "16": 16, "f0f0f0": 16, "themes_model": 16, "strongli": 16, "never": 16, "identifi": 16, "inform": 16, "pii": 16, "persist": 16, "quick": 16, "start": 16, "guid": 16, "doc": 16, "trainer": 16, "free": 16, "pro": 16, "mission": 16, "corner": 16, "littl": 16, "better": 16, "dai": 16, "whole": 16, "becom": 16, "your": 16, "product": 16, "work": 16, "do": 16, "welcom": 16, "hope": 16, "you": 16, "find": 16, "my": 16, "labor": 16, "love": 16, "justin": 16, "chapwesk": 16}, "objects": {"": [[0, 0, 0, "-", "improveai"]], "improveai": [[1, 0, 0, "-", "chooser"], [2, 0, 0, "-", "cythonized_feature_encoding"], [4, 0, 0, "-", "feature_encoder"], [5, 0, 0, "-", "improve_cli"], [6, 0, 0, "-", "ranker"], [7, 0, 0, "-", "reward_tracker"], [8, 0, 0, "-", "scorer"], [9, 0, 0, "-", "settings"], [10, 0, 0, "-", "utils"]], "improveai.chooser": [[1, 1, 1, "", "FEATURE_NAMES_METADATA_KEY"], [1, 1, 1, "", "USER_DEFINED_METADATA_KEY"], [1, 2, 1, "", "XGBChooser"]], "improveai.chooser.XGBChooser": [[1, 3, 1, "", "CREATED_AT_METADATA_KEY"], [1, 3, 1, "", "FEATURE_NAMES_METADATA_KEY"], [1, 3, 1, "", "IMPROVE_AI_ALLOWED_MAJOR_VERSION"], [1, 3, 1, "", "MODEL_NAME_METADATA_KEY"], [1, 4, 1, "", "MODEL_NAME_REGEXP"], [1, 3, 1, "", "MODEL_SEED_METADATA_KEY"], [1, 3, 1, "", "REQUIRED_METADATA_KEYS"], [1, 3, 1, "", "STRING_TABLES_METADATA_KEY"], [1, 3, 1, "", "USER_DEFINED_METADATA_KEY"], [1, 3, 1, "", "VERSION_METADATA_KEY"], [1, 5, 1, "", "__init__"], [1, 5, 1, "", "_get_improveai_major_version"], [1, 5, 1, "", "_get_model_feature_names"], [1, 5, 1, "", "_get_model_metadata"], [1, 5, 1, "", "_get_model_name"], [1, 5, 1, "", "_get_model_seed"], [1, 5, 1, "", "_get_noise"], [1, 5, 1, "", "_get_string_tables"], [1, 5, 1, "", "calculate_predictions"], [1, 3, 1, "", "current_noise"], [1, 5, 1, "", "encode_candidates_to_matrix"], [1, 5, 1, "", "encode_candidates_with_context"], [1, 3, 1, "", "feature_encoder"], [1, 3, 1, "", "feature_names"], [1, 5, 1, "", "get_model_src"], [1, 3, 1, "", "imposed_noise"], [1, 3, 1, "", "improveai_major_version_from_metadata"], [1, 5, 1, "", "load_model"], [1, 3, 1, "", "model"], [1, 3, 1, "", "model_metadata"], [1, 3, 1, "", "model_name"], [1, 5, 1, "", "score"]], "improveai.cythonized_feature_encoding": [[3, 0, 0, "-", "cythonized_feature_encoder"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder": [[3, 2, 1, "", "FeatureEncoder"], [3, 2, 1, "", "StringTable"], [3, 6, 1, "", "encode_candidates_to_matrix"], [3, 6, 1, "", "get_mask"], [3, 6, 1, "", "get_noise_shift_scale"], [3, 6, 1, "", "scale"], [3, 6, 1, "", "sprinkle"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder": [[3, 5, 1, "", "__init__"], [3, 5, 1, "", "_encode"], [3, 5, 1, "", "encode_context"], [3, 5, 1, "", "encode_feature_vector"], [3, 5, 1, "", "encode_item"], [3, 4, 1, "", "feature_indexes"], [3, 4, 1, "", "string_tables"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable": [[3, 5, 1, "", "__init__"], [3, 5, 1, "", "encode"], [3, 5, 1, "", "encode_miss"], [3, 4, 1, "", "mask"], [3, 4, 1, "", "miss_width"], [3, 4, 1, "", "model_seed"], [3, 4, 1, "", "value_table"]], "improveai.feature_encoder": [[4, 1, 1, "", "CONTEXT_FEATURE_KEY"], [4, 2, 1, "", "FeatureEncoder"], [4, 1, 1, "", "ITEM_FEATURE_KEY"], [4, 2, 1, "", "StringTable"], [4, 6, 1, "", "get_mask"], [4, 6, 1, "", "get_noise_shift_scale"], [4, 6, 1, "", "scale"], [4, 6, 1, "", "sprinkle"]], "improveai.feature_encoder.FeatureEncoder": [[4, 5, 1, "", "__init__"], [4, 5, 1, "", "_check_into"], [4, 5, 1, "", "_encode"], [4, 5, 1, "", "encode_context"], [4, 5, 1, "", "encode_feature_vector"], [4, 5, 1, "", "encode_item"], [4, 3, 1, "", "feature_indexes"], [4, 3, 1, "", "string_tables"]], "improveai.feature_encoder.StringTable": [[4, 5, 1, "", "__init__"], [4, 5, 1, "", "encode"], [4, 5, 1, "", "encode_miss"], [4, 3, 1, "", "mask"], [4, 3, 1, "", "miss_width"], [4, 3, 1, "", "model_seed"], [4, 3, 1, "", "value_table"]], "improveai.ranker": [[6, 2, 1, "", "Ranker"]], "improveai.ranker.Ranker": [[6, 4, 1, "", "SUPPORTED_CALLS"], [6, 5, 1, "", "__init__"], [6, 3, 1, "", "model_url"], [6, 5, 1, "", "rank"], [6, 3, 1, "", "scorer"]], "improveai.reward_tracker": [[7, 2, 1, "", "RewardTracker"]], "improveai.reward_tracker.RewardTracker": [[7, 3, 1, "", "API_KEY_HEADER"], [7, 3, 1, "", "CONTEXT_KEY"], [7, 3, 1, "", "ITEMS_COUNT_KEY"], [7, 3, 1, "", "ITEM_KEY"], [7, 3, 1, "", "MESSAGE_ID_KEY"], [7, 3, 1, "", "MODEL_KEY"], [7, 3, 1, "", "PAYLOAD_FOR_ERROR_KEY"], [7, 3, 1, "", "REQUEST_ERROR_CODE_KEY"], [7, 3, 1, "", "REWARD_ID_KEY"], [7, 3, 1, "", "REWARD_KEY"], [7, 3, 1, "", "SAMPLE_KEY"], [7, 5, 1, "", "__init__"], [7, 5, 1, "", "_get_sample"], [7, 5, 1, "", "_get_track_body"], [7, 5, 1, "", "_is_valid_message_id"], [7, 5, 1, "", "add_reward"], [7, 3, 1, "", "api_key"], [7, 5, 1, "", "do_post_improve_request"], [7, 3, 1, "", "model_name"], [7, 5, 1, "", "post_improve_request"], [7, 3, 1, "", "threaded_requests"], [7, 5, 1, "", "track"], [7, 3, 1, "", "track_url"], [7, 5, 1, "", "track_with_sample"]], "improveai.scorer": [[8, 2, 1, "", "Scorer"]], "improveai.scorer.Scorer": [[8, 3, 1, "", "TIEBREAKER_MULTIPLIER"], [8, 5, 1, "", "__init__"], [8, 3, 1, "", "chooser"], [8, 3, 1, "", "model_url"], [8, 5, 1, "", "score"]], "improveai.settings": [[9, 1, 1, "", "CYTHON_BACKEND_AVAILABLE"], [9, 1, 1, "", "DEBUG"], [9, 6, 1, "", "gcc_and_py3_dev_installed"]], "improveai.utils": [[11, 0, 0, "-", "general_purpose_tools"], [12, 0, 0, "-", "gzip_tools"], [13, 0, 0, "-", "url_tools"]], "improveai.utils.general_purpose_tools": [[11, 6, 1, "", "check_candidates"], [11, 6, 1, "", "deepcopy_args"], [11, 6, 1, "", "is_valid_ksuid"], [11, 6, 1, "", "read_jsonstring_from_file"]], "improveai.utils.gzip_tools": [[12, 6, 1, "", "check_and_get_unzipped_model"], [12, 6, 1, "", "get_unzipped_gz"], [12, 6, 1, "", "is_gz_bytes"]], "improveai.utils.url_tools": [[13, 6, 1, "", "get_model_bytes_from_url"], [13, 6, 1, "", "is_path_http_addr"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:property", "4": "py:attribute", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"improveai": [0, 2, 10, 15], "packag": [0, 2, 10], "subpackag": 0, "submodul": [0, 2, 10], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "content": [0, 2, 10], "chooser": 1, "py": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13], "cythonized_feature_encod": [2, 3], "pyx": 3, "feature_encod": 4, "improve_cli": 5, "ranker": [6, 14], "reward_track": 7, "scorer": 8, "set": 9, "util": [10, 14], "general_purpose_tool": 11, "gzip_tool": 12, "url_tool": 13, "welcom": 14, "improv": [14, 16], "ai": 14, "python": 14, "document": 14, "readm": [14, 16], "class": 14, "indic": 14, "tabl": 14, "instal": 16, "initi": 16, "usag": 16, "contextu": 16, "decis": 16, "rank": 16, "score": 16, "multivari": 16, "optim": 16, "variant": 16, "type": 16, "privaci": 16, "resourc": 16, "help": 16, "our": 16, "world": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"improveai package": [[0, "improveai-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [10, "submodules"]], "Module contents": [[0, "module-improveai"], [2, "module-improveai.cythonized_feature_encoding"], [10, "module-improveai.utils"]], "chooser.py module": [[1, "module-improveai.chooser"]], "improveai.cythonized_feature_encoding package": [[2, "improveai-cythonized-feature-encoding-package"]], "cythonized_feature_encoder.pyx module": [[3, "module-improveai.cythonized_feature_encoding.cythonized_feature_encoder"]], "feature_encoder.py module": [[4, "module-improveai.feature_encoder"]], "improve_cli.py module": [[5, "module-improveai.improve_cli"]], "ranker.py module": [[6, "module-improveai.ranker"]], "reward_tracker.py module": [[7, "module-improveai.reward_tracker"]], "scorer.py module": [[8, "module-improveai.scorer"]], "settings.py module": [[9, "module-improveai.settings"]], "improveai.utils package": [[10, "improveai-utils-package"]], "general_purpose_tools.py module": [[11, "module-improveai.utils.general_purpose_tools"]], "gzip_tools.py module": [[12, "module-improveai.utils.gzip_tools"]], "url_tools.py module": [[13, "module-improveai.utils.url_tools"]], "Welcome to Improve AI python ranker documentation!": [[14, "welcome-to-improve-ai-python-ranker-documentation"]], "Readme:": [[14, null]], "Classes:": [[14, null]], "Utils:": [[14, null]], "Indices and tables": [[14, "indices-and-tables"]], "improveai": [[15, "improveai"]], "Readme": [[16, "readme"]], "Installation": [[16, "installation"]], "Initialization": [[16, "initialization"]], "Usage": [[16, "usage"]], "Contextual Decisions": [[16, "contextual-decisions"]], "Ranking": [[16, "ranking"]], "Scoring": [[16, "scoring"]], "Multivariate Optimization": [[16, "multivariate-optimization"]], "Variant Types": [[16, "variant-types"]], "Privacy": [[16, "privacy"]], "Resources": [[16, "resources"]], "Help Improve Our World": [[16, "help-improve-our-world"]]}, "indexentries": {"improveai": [[0, "module-improveai"]], "module": [[0, "module-improveai"], [1, "module-improveai.chooser"], [2, "module-improveai.cythonized_feature_encoding"], [3, "module-improveai.cythonized_feature_encoding.cythonized_feature_encoder"], [4, "module-improveai.feature_encoder"], [5, "module-improveai.improve_cli"], [6, "module-improveai.ranker"], [7, "module-improveai.reward_tracker"], [8, "module-improveai.scorer"], [9, "module-improveai.settings"], [10, "module-improveai.utils"], [11, "module-improveai.utils.general_purpose_tools"], [12, "module-improveai.utils.gzip_tools"], [13, "module-improveai.utils.url_tools"]], "created_at_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.CREATED_AT_METADATA_KEY"]], "feature_names_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.FEATURE_NAMES_METADATA_KEY"]], "feature_names_metadata_key (in module improveai.chooser)": [[1, "improveai.chooser.FEATURE_NAMES_METADATA_KEY"]], "improve_ai_allowed_major_version (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.IMPROVE_AI_ALLOWED_MAJOR_VERSION"]], "model_name_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.MODEL_NAME_METADATA_KEY"]], "model_name_regexp (xgbchooser attribute)": [[1, "improveai.chooser.XGBChooser.MODEL_NAME_REGEXP"]], "model_seed_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.MODEL_SEED_METADATA_KEY"]], "required_metadata_keys (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.REQUIRED_METADATA_KEYS"]], "string_tables_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.STRING_TABLES_METADATA_KEY"]], "user_defined_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.USER_DEFINED_METADATA_KEY"]], "user_defined_metadata_key (in module improveai.chooser)": [[1, "improveai.chooser.USER_DEFINED_METADATA_KEY"]], "version_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.VERSION_METADATA_KEY"]], "xgbchooser (class in improveai.chooser)": [[1, "improveai.chooser.XGBChooser"]], "__init__() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.__init__"]], "_get_improveai_major_version() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_improveai_major_version"]], "_get_model_feature_names() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_feature_names"]], "_get_model_metadata() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_metadata"]], "_get_model_name() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_name"]], "_get_model_seed() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_seed"]], "_get_noise() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_noise"]], "_get_string_tables() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_string_tables"]], "calculate_predictions() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.calculate_predictions"]], "current_noise (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.current_noise"]], "encode_candidates_to_matrix() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.encode_candidates_to_matrix"]], "encode_candidates_with_context() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.encode_candidates_with_context"]], "feature_encoder (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.feature_encoder"]], "feature_names (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.feature_names"]], "get_model_src() (xgbchooser static method)": [[1, "improveai.chooser.XGBChooser.get_model_src"]], "imposed_noise (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.imposed_noise"]], "improveai.chooser": [[1, "module-improveai.chooser"]], "improveai_major_version_from_metadata (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.improveai_major_version_from_metadata"]], "load_model() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.load_model"]], "model (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.model"]], "model_metadata (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.model_metadata"]], "model_name (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.model_name"]], "score() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.score"]], "improveai.cythonized_feature_encoding": [[2, "module-improveai.cythonized_feature_encoding"]], "featureencoder (class in improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder"]], "stringtable (class in improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable"]], "__init__() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.__init__"], [4, "improveai.feature_encoder.FeatureEncoder.__init__"]], "__init__() (stringtable method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.__init__"], [4, "improveai.feature_encoder.StringTable.__init__"]], "_encode() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder._encode"], [4, "improveai.feature_encoder.FeatureEncoder._encode"]], "encode() (stringtable method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.encode"], [4, "improveai.feature_encoder.StringTable.encode"]], "encode_candidates_to_matrix() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.encode_candidates_to_matrix"]], "encode_context() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.encode_context"], [4, "improveai.feature_encoder.FeatureEncoder.encode_context"]], "encode_feature_vector() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.encode_feature_vector"], [4, "improveai.feature_encoder.FeatureEncoder.encode_feature_vector"]], "encode_item() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.encode_item"], [4, "improveai.feature_encoder.FeatureEncoder.encode_item"]], "encode_miss() (stringtable method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.encode_miss"], [4, "improveai.feature_encoder.StringTable.encode_miss"]], "feature_indexes (featureencoder attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.feature_indexes"]], "get_mask() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.get_mask"]], "get_noise_shift_scale() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.get_noise_shift_scale"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder": [[3, "module-improveai.cythonized_feature_encoding.cythonized_feature_encoder"]], "mask (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.mask"]], "miss_width (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.miss_width"]], "model_seed (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.model_seed"]], "scale() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.scale"]], "sprinkle() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.sprinkle"]], "string_tables (featureencoder attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.string_tables"]], "value_table (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.value_table"]], "context_feature_key (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.CONTEXT_FEATURE_KEY"]], "featureencoder (class in improveai.feature_encoder)": [[4, "improveai.feature_encoder.FeatureEncoder"]], "item_feature_key (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.ITEM_FEATURE_KEY"]], "stringtable (class in improveai.feature_encoder)": [[4, "improveai.feature_encoder.StringTable"]], "_check_into() (featureencoder method)": [[4, "improveai.feature_encoder.FeatureEncoder._check_into"]], "feature_indexes (featureencoder property)": [[4, "improveai.feature_encoder.FeatureEncoder.feature_indexes"]], "get_mask() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.get_mask"]], "get_noise_shift_scale() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.get_noise_shift_scale"]], "improveai.feature_encoder": [[4, "module-improveai.feature_encoder"]], "mask (stringtable property)": [[4, "improveai.feature_encoder.StringTable.mask"]], "miss_width (stringtable property)": [[4, "improveai.feature_encoder.StringTable.miss_width"]], "model_seed (stringtable property)": [[4, "improveai.feature_encoder.StringTable.model_seed"]], "scale() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.scale"]], "sprinkle() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.sprinkle"]], "string_tables (featureencoder property)": [[4, "improveai.feature_encoder.FeatureEncoder.string_tables"]], "value_table (stringtable property)": [[4, "improveai.feature_encoder.StringTable.value_table"]], "improveai.improve_cli": [[5, "module-improveai.improve_cli"]], "ranker (class in improveai.ranker)": [[6, "improveai.ranker.Ranker"]], "supported_calls (ranker attribute)": [[6, "improveai.ranker.Ranker.SUPPORTED_CALLS"]], "__init__() (ranker method)": [[6, "improveai.ranker.Ranker.__init__"]], "improveai.ranker": [[6, "module-improveai.ranker"]], "model_url (ranker property)": [[6, "improveai.ranker.Ranker.model_url"]], "rank() (ranker method)": [[6, "improveai.ranker.Ranker.rank"]], "scorer (ranker property)": [[6, "improveai.ranker.Ranker.scorer"]], "api_key_header (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.API_KEY_HEADER"]], "context_key (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.CONTEXT_KEY"]], "items_count_key (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.ITEMS_COUNT_KEY"]], "item_key (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.ITEM_KEY"]], "message_id_key (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.MESSAGE_ID_KEY"]], "model_key (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.MODEL_KEY"]], "payload_for_error_key (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.PAYLOAD_FOR_ERROR_KEY"]], "request_error_code_key (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.REQUEST_ERROR_CODE_KEY"]], "reward_id_key (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.REWARD_ID_KEY"]], "reward_key (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.REWARD_KEY"]], "rewardtracker (class in improveai.reward_tracker)": [[7, "improveai.reward_tracker.RewardTracker"]], "sample_key (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.SAMPLE_KEY"]], "__init__() (rewardtracker method)": [[7, "improveai.reward_tracker.RewardTracker.__init__"]], "_get_sample() (rewardtracker method)": [[7, "improveai.reward_tracker.RewardTracker._get_sample"]], "_get_track_body() (rewardtracker method)": [[7, "improveai.reward_tracker.RewardTracker._get_track_body"]], "_is_valid_message_id() (rewardtracker method)": [[7, "improveai.reward_tracker.RewardTracker._is_valid_message_id"]], "add_reward() (rewardtracker method)": [[7, "improveai.reward_tracker.RewardTracker.add_reward"]], "api_key (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.api_key"]], "do_post_improve_request() (rewardtracker method)": [[7, "improveai.reward_tracker.RewardTracker.do_post_improve_request"]], "improveai.reward_tracker": [[7, "module-improveai.reward_tracker"]], "model_name (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.model_name"]], "post_improve_request() (rewardtracker method)": [[7, "improveai.reward_tracker.RewardTracker.post_improve_request"]], "threaded_requests (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.threaded_requests"]], "track() (rewardtracker method)": [[7, "improveai.reward_tracker.RewardTracker.track"]], "track_url (rewardtracker property)": [[7, "improveai.reward_tracker.RewardTracker.track_url"]], "track_with_sample() (rewardtracker method)": [[7, "improveai.reward_tracker.RewardTracker.track_with_sample"]], "scorer (class in improveai.scorer)": [[8, "improveai.scorer.Scorer"]], "tiebreaker_multiplier (scorer property)": [[8, "improveai.scorer.Scorer.TIEBREAKER_MULTIPLIER"]], "__init__() (scorer method)": [[8, "improveai.scorer.Scorer.__init__"]], "chooser (scorer property)": [[8, "improveai.scorer.Scorer.chooser"]], "improveai.scorer": [[8, "module-improveai.scorer"]], "model_url (scorer property)": [[8, "improveai.scorer.Scorer.model_url"]], "score() (scorer method)": [[8, "improveai.scorer.Scorer.score"]], "cython_backend_available (in module improveai.settings)": [[9, "improveai.settings.CYTHON_BACKEND_AVAILABLE"]], "debug (in module improveai.settings)": [[9, "improveai.settings.DEBUG"]], "gcc_and_py3_dev_installed() (in module improveai.settings)": [[9, "improveai.settings.gcc_and_py3_dev_installed"]], "improveai.settings": [[9, "module-improveai.settings"]], "improveai.utils": [[10, "module-improveai.utils"]], "check_candidates() (in module improveai.utils.general_purpose_tools)": [[11, "improveai.utils.general_purpose_tools.check_candidates"]], "deepcopy_args() (in module improveai.utils.general_purpose_tools)": [[11, "improveai.utils.general_purpose_tools.deepcopy_args"]], "improveai.utils.general_purpose_tools": [[11, "module-improveai.utils.general_purpose_tools"]], "is_valid_ksuid() (in module improveai.utils.general_purpose_tools)": [[11, "improveai.utils.general_purpose_tools.is_valid_ksuid"]], "read_jsonstring_from_file() (in module improveai.utils.general_purpose_tools)": [[11, "improveai.utils.general_purpose_tools.read_jsonstring_from_file"]], "check_and_get_unzipped_model() (in module improveai.utils.gzip_tools)": [[12, "improveai.utils.gzip_tools.check_and_get_unzipped_model"]], "get_unzipped_gz() (in module improveai.utils.gzip_tools)": [[12, "improveai.utils.gzip_tools.get_unzipped_gz"]], "improveai.utils.gzip_tools": [[12, "module-improveai.utils.gzip_tools"]], "is_gz_bytes() (in module improveai.utils.gzip_tools)": [[12, "improveai.utils.gzip_tools.is_gz_bytes"]], "get_model_bytes_from_url() (in module improveai.utils.url_tools)": [[13, "improveai.utils.url_tools.get_model_bytes_from_url"]], "improveai.utils.url_tools": [[13, "module-improveai.utils.url_tools"]], "is_path_http_addr() (in module improveai.utils.url_tools)": [[13, "improveai.utils.url_tools.is_path_http_addr"]]}})