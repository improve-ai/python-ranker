Search.setIndex({"docnames": ["improveai", "improveai.chooser", "improveai.cythonized_feature_encoding", "improveai.cythonized_feature_encoding.cythonized_feature_encoder", "improveai.feature_encoder", "improveai.improve_cli", "improveai.model_based_predictions", "improveai.ranker", "improveai.reward_tracker", "improveai.scorer", "improveai.settings", "improveai.utils", "improveai.utils.general_purpose_tools", "improveai.utils.gzip_tools", "improveai.utils.url_tools", "index", "modules", "readme"], "filenames": ["improveai.rst", "improveai.chooser.rst", "improveai.cythonized_feature_encoding.rst", "improveai.cythonized_feature_encoding.cythonized_feature_encoder.rst", "improveai.feature_encoder.rst", "improveai.improve_cli.rst", "improveai.model_based_predictions.rst", "improveai.ranker.rst", "improveai.reward_tracker.rst", "improveai.scorer.rst", "improveai.settings.rst", "improveai.utils.rst", "improveai.utils.general_purpose_tools.rst", "improveai.utils.gzip_tools.rst", "improveai.utils.url_tools.rst", "index.rst", "modules.rst", "readme.md"], "titles": ["improveai package", "chooser.py module", "improveai.cythonized_feature_encoding package", "cythonized_feature_encoder.pyx module", "feature_encoder.py module", "improve_cli.py module", "model_based_predictions.py module", "ranker.py module", "reward_tracker.py module", "scorer.py module", "settings.py module", "improveai.utils package", "general_purpose_tools.py module", "gzip_tools.py module", "url_tools.py module", "Welcome to Improve AI python ranker documentation!", "improveai", "Installation"], "terms": {"cythonized_feature_encod": [0, 16], "pyx": [0, 2], "featureencod": [0, 1, 2, 3, 4, 15, 16], "stringtabl": [0, 2, 3, 4, 15, 16], "encode_candidates_to_matrix": [0, 1, 2, 3, 15], "get_mask": [0, 2, 3, 4, 15, 16], "get_noise_shift_scal": [0, 2, 3, 4, 15, 16], "scale": [0, 2, 3, 4, 15, 16], "sprinkl": [0, 1, 2, 3, 4, 15, 16], "util": [0, 16], "general_purpose_tool": [0, 11], "py": [0, 11, 16], "read_jsonstring_from_fil": [0, 11, 12, 15], "check_candid": [0, 11, 12, 15], "is_valid_ksuid": [0, 11, 12, 15], "deepcopy_arg": [0, 11, 12, 15], "gzip_tool": [0, 11], "is_gz_byt": [0, 11, 13, 15], "get_unzipped_gz": [0, 11, 13, 15], "check_and_get_unzipped_model": [0, 11, 13, 15], "url_tool": [0, 11], "is_path_http_addr": [0, 11, 14, 15], "get_model_bytes_from_url": [0, 11, 14, 15], "chooser": [0, 9, 15, 16], "user_defined_metadata_kei": [0, 1, 15, 16], "feature_names_metadata_kei": [0, 1, 15, 16], "xgbchooser": [0, 1, 9, 15, 16], "model_name_regexp": [0, 1, 15], "model_nam": [0, 1, 8, 15], "imposed_nois": [0, 1, 15], "improveai_major_version_from_metadata": [0, 1, 15], "string_tables_metadata_kei": [0, 1, 15], "model_seed_metadata_kei": [0, 1, 15], "model_name_metadata_kei": [0, 1, 15], "created_at_metadata_kei": [0, 1, 15], "improve_ai_allowed_major_vers": [0, 1, 15], "version_metadata_kei": [0, 1, 15], "required_metadata_kei": [0, 1, 15], "__init__": [0, 1, 2, 3, 4, 7, 8, 9, 15], "model": [0, 1, 3, 4, 7, 8, 9, 13, 14, 15, 17], "model_metadata": [0, 1, 15], "feature_encod": [0, 1, 15, 16], "feature_nam": [0, 1, 3, 4, 15], "current_nois": [0, 1, 15], "load_model": [0, 1, 15, 17], "_get_nois": [0, 1, 15], "score": [0, 1, 7, 9, 15], "calculate_predict": [0, 1, 15], "encode_candidates_with_context": [0, 1, 15], "get_model_src": [0, 1, 15], "_get_improveai_major_vers": [0, 1, 15], "_get_model_metadata": [0, 1, 15], "_get_model_feature_nam": [0, 1, 15], "_get_model_se": [0, 1, 15], "_get_model_nam": [0, 1, 15], "_get_string_t": [0, 1, 15], "item_feature_kei": [0, 4, 15, 16], "context_feature_kei": [0, 4, 15, 16], "feature_index": [0, 2, 3, 4, 15], "string_tabl": [0, 1, 2, 3, 4, 15], "_check_into": [0, 4, 15], "encode_item": [0, 2, 3, 4, 15], "encode_context": [0, 2, 3, 4, 15], "encode_feature_vector": [0, 2, 3, 4, 15], "_encod": [0, 2, 3, 4, 15], "model_se": [0, 2, 3, 4, 15], "mask": [0, 2, 3, 4, 15], "miss_width": [0, 2, 3, 4, 15], "value_t": [0, 2, 3, 4, 15], "encod": [0, 1, 2, 3, 4, 7, 8, 9, 15, 17], "encode_miss": [0, 2, 3, 4, 15], "improve_cli": [0, 16], "model_based_predict": [0, 16], "ranker": [0, 16], "supported_cal": [0, 7, 15], "scorer": [0, 7, 15, 16], "model_url": [0, 7, 9, 14, 15, 17], "rank": [0, 7, 15], "reward_track": [0, 16], "rewardtrack": [0, 8, 15, 16], "model_kei": [0, 8, 15], "message_id_kei": [0, 8, 15], "item_kei": [0, 8, 15], "context_kei": [0, 8, 15], "reward_kei": [0, 8, 15], "reward_id_kei": [0, 8, 15], "api_key_head": [0, 8, 15], "payload_for_error_kei": [0, 8, 15], "request_error_code_kei": [0, 8, 15], "items_count_kei": [0, 8, 15], "sample_kei": [0, 8, 15], "threaded_request": [0, 8, 15], "track_url": [0, 8, 15, 17], "api_kei": [0, 8, 15], "_get_track_bodi": [0, 8, 15], "_get_sampl": [0, 8, 15], "track": [0, 8, 15, 17], "track_with_sampl": [0, 8, 15], "add_reward": [0, 8, 15, 17], "_is_valid_message_id": [0, 8, 15], "do_post_improve_request": [0, 8, 15], "post_improve_request": [0, 8, 15], "tiebreaker_multipli": [0, 9, 15], "set": [0, 1, 7, 9, 15, 16], "gcc_and_py3_dev_instal": [0, 10, 15, 16], "cython_backend_avail": [0, 10, 15, 16], "debug": [0, 1, 10, 15, 16], "user_defined_metadata": 1, "kei": [1, 3, 4, 8, 17], "us": [1, 3, 4, 7, 8, 9, 17], "store": [1, 3, 4, 8], "improv": [1, 7, 8, 9], "ai": [1, 7, 8, 9, 17], "metadata": 1, "insid": 1, "booster": [1, 7, 9], "attr": 1, "featur": [1, 3, 4, 17], "name": [1, 3, 4, 8], "dure": [1, 3, 4, 7, 8, 9], "": [1, 3, 4, 7, 8, 9, 17], "save": 1, "procedur": 1, "ar": [1, 3, 4, 7, 8, 9, 10, 12, 17], "truncat": 1, "from": [1, 3, 4, 8, 9, 12, 14, 17], "class": [1, 3, 4, 7, 8, 9], "base": [1, 3, 4, 7, 8, 9], "object": [1, 3, 4, 7, 8, 9, 17], "za": [1, 8], "z0": [1, 8], "9": [1, 8], "w": [1, 8], "0": [1, 3, 4, 8, 9, 17], "63": [1, 8], "regexp": 1, "verifi": 1, "all": [1, 3, 4, 17], "both": [1, 7, 9, 10], "user": [1, 8], "provid": [1, 3, 4, 7, 8, 9, 13, 14, 17], "cach": 1, "properti": [1, 4, 7, 8, 9, 17], "thi": [1, 3, 4, 7, 8, 9, 14, 17], "return": [1, 3, 4, 7, 8, 9, 10, 12, 13, 14, 17], "type": [1, 3, 4, 7, 8, 9, 10, 12, 13, 14, 15], "str": [1, 3, 4, 7, 8, 9, 12, 13, 14], "impos": 1, "nois": [1, 3, 4], "valu": [1, 3, 4, 8, 9, 12, 17], "need": [1, 3, 4], "sdk": [1, 10, 17], "valid": [1, 8, 12, 17], "synthet": 1, "forc": 1, "float": [1, 3, 4, 8, 9], "version": 1, "string": [1, 3, 4, 12, 13, 14, 17], "none": [1, 3, 4, 7, 8, 9, 17], "tabl": [1, 3, 4, 17], "seed": [1, 3, 4], "creation": 1, "time": [1, 17], "created_at": 1, "latest": [1, 17], "support": [1, 7], "major": 1, "8": 1, "int": [1, 3, 4, 8], "attribut": 1, "an": [1, 3, 4, 8, 9, 12, 17], "entir": 1, "defin": 1, "dict": [1, 3, 4, 8, 12, 17], "expect": [1, 17], "requir": 1, "list": [1, 3, 4, 7, 8, 9, 12, 17], "present": 1, "initi": [1, 3, 4, 7, 9, 15], "xgboost": [1, 7, 9], "current": [1, 3, 4, 7, 17], "input_model_src": 1, "verbos": 1, "fals": [1, 8, 10, 12, 14, 17], "load": [1, 12], "desir": [1, 4, 12], "input": [1, 3, 4, 8, 12, 13], "path": [1, 3, 4, 7, 9, 13, 14], "paramet": [1, 3, 4, 7, 8, 9, 12, 13, 14], "url": [1, 7, 8, 9, 14, 15, 17], "bool": [1, 8, 10, 12, 13, 14], "should": [1, 3, 4, 8, 10, 12, 17], "i": [1, 3, 4, 7, 8, 10, 12, 13, 14, 17], "print": [1, 8], "messag": [1, 8, 10], "privat": 1, "getter": 1, "can": [1, 7, 8, 9, 17], "manual": 1, "wa": 1, "test": [1, 17], "purpos": [1, 15], "pleas": [1, 9], "note": [1, 17], "natur": 1, "flow": 1, "randomli": [1, 8], "sampl": [1, 8, 9], "1": [1, 3, 4, 8, 9, 17], "uniform": 1, "distribut": 1, "candid": [1, 3, 4, 8, 12], "context": [1, 3, 4, 7, 8, 9, 17], "2d": [1, 3], "np": [1, 3, 4, 7, 8, 9, 12], "arrai": [1, 3, 4, 9], "given": [1, 3, 4, 8, 17], "tupl": [1, 3, 4, 7, 8, 9, 12], "ndarrai": [1, 3, 4, 7, 8, 9, 12], "json": [1, 3, 4, 7, 8, 9, 12, 17], "item": [1, 3, 4, 7, 8, 9, 12, 17], "numpi": [1, 3, 4], "kwarg": 1, "calcul": [1, 7, 9], "2": [1, 3, 4, 17], "step": 1, "predict": 1, "1d": 1, "features_matrix": 1, "matrix": 1, "sourc": [1, 13, 14], "dmatrix": 1, "implement": [1, 17], "helper": [1, 8, 12], "method": [1, 7, 8, 12], "cython": [1, 10], "backend": [1, 10], "speed": 1, "thing": 1, "up": 1, "possibl": [1, 8], "collect": [1, 7, 8, 12, 17], "variant": [1, 3, 4, 8, 12, 15], "static": 1, "model_src": [1, 13], "f": [1, 7, 9], "unzip": [1, 13], "bytesarrai": 1, "gzip": [1, 7, 9, 13, 15], "lead": [1, 7, 9], "output": 1, "pass": [1, 8], "directli": 1, "byte": [1, 3, 4, 13, 14], "pth": [1, 12], "download": [1, 14], "bytearrai": 1, "extract": 1, "allow": [1, 7, 9], "dictionari": [1, 17], "contain": [1, 8], "get": [1, 14], "vector": [3, 4], "order": [3, 4, 7], "matter": [3, 4], "first": [3, 4, 17], "map": [3, 4, 17], "hash": [3, 4], "rais": [3, 4, 8], "valueerror": [3, 4], "corrupt": [3, 4], "serializ": [3, 4], "rule": [3, 4], "go": [3, 4], "follow": [3, 4, 17], "null": [3, 4], "nan": [3, 4], "treat": [3, 4], "miss": [3, 4], "ignor": [3, 4], "number": [3, 4, 8, 9, 17], "boolean": [3, 4, 8], "lookup": [3, 4], "obj": [3, 4], "flat": [3, 4], "structur": [3, 4, 17], "doubl": [3, 9, 12], "ndim": 3, "mode": [3, 12, 17], "c": 3, "which": [3, 4, 8, 17], "noise_shift": [3, 4], "small": [3, 4, 9], "bia": [3, 4], "ad": [3, 4, 9], "noise_scal": [3, 4], "multipli": [3, 4, 9], "python": [3, 4, 10, 17], "result": [3, 4, 12, 17], "shift": [3, 4], "fulli": [3, 4], "must": [3, 4, 7, 8, 17], "combin": [3, 4], "A": [3, 4, 7, 17], "between": [3, 4], "index": [3, 4, 15], "creat": [3, 4, 8], "simpl": [3, 4, 17], "iter": [3, 4], "enumer": [3, 4], "over": [3, 4], "The": [3, 4, 17], "element": [3, 4], "constructor": [3, 4, 7], "respons": [3, 4], "target": [3, 4], "init": [3, 4, 7, 8, 9], "param": [3, 4, 7, 8, 9], "each": [3, 4, 17], "string_hash": [3, 4], "unsign": 3, "long": 3, "At": [3, 4, 17], "most": [3, 4, 7, 9, 17], "64": [3, 4], "bit": [3, 4, 17], "represent": [3, 4], "e": [3, 4], "g": [3, 4], "000": [3, 4], "00111": [3, 4], "repres": [3, 4, 8], "snap": [3, 4], "width": [3, 4], "interv": [3, 4], "numer": [3, 4], "unknown": [3, 4], "It": [3, 4, 17], "center": [3, 4], "32": [3, 4], "random": [3, 4, 8, 9], "integ": [3, 4], "xxhash": [3, 4], "binari": [3, 4], "assum": [3, 4], "within": [3, 4, 8, 17], "rang": [3, 4], "val": [3, 4], "add": [3, 4, 17], "x": [3, 4], "prefix": 4, "deriv": 4, "check": [4, 8, 9, 10, 12, 13, 14], "ha": 4, "float64": 4, "dtype": 4, "normal": 4, "decreas": 4, "cli": 7, "onli": [7, 9], "If": [7, 8, 13, 17], "prefer": 7, "local": [7, 9], "raw": [7, 9], "file": [7, 9, 12, 13], "commonli": [7, 9], "have": [7, 9], "xgb": [7, 9, 17], "extens": [7, 9], "well": [7, 9], "gz": [7, 9, 13, 17], "either": [7, 8, 13], "improveai": [7, 8, 9, 17], "them": 7, "best": [7, 8, 17], "worst": 7, "ani": [7, 8, 9, 17], "serv": [7, 9], "ident": 7, "under": 8, "request": [8, 12], "bodi": [8, 12], "id": [8, 12], "reward": [8, 17], "decis": [8, 15], "header": [8, 10], "api": [8, 17], "info": [8, 9], "caus": 8, "error": 8, "code": [8, 17], "count": 8, "flag": [8, 13, 17], "indic": [8, 10, 13], "whether": 8, "execut": [8, 17], "threadpoolexecutor": 8, "true": [8, 10, 12, 13, 14, 17], "non": 8, "block": 8, "thread": 8, "consecut": 8, "aw": [8, 17], "endpoint": 8, "blockng": 8, "track_api_kei": 8, "_threaded_request": 8, "make": [8, 17], "whose": 8, "being": [8, 13, 17], "nullabl": 8, "sub": 8, "default": [8, 12], "regex": 8, "applic": 8, "num_candid": 8, "_post_improve_request": 8, "select": 8, "exclud": 8, "assertionerror": 8, "len": 8, "nto": 8, "causal": 8, "system": [8, 17], "chosen": 8, "sent": 8, "happen": 8, "append": 8, "contrari": 8, "where": 8, "along": 8, "ste": 8, "reward_id": 8, "assign": [8, 17], "post": 8, "equal": 8, "ksuid": [8, 12], "message_id": 8, "otherwis": [8, 10, 12, 14, 17], "payload_json": 8, "payload": 8, "dump": 8, "body_valu": 8, "tracker": 8, "In": 8, "case": 8, "except": 8, "process": [8, 17], "doe": [8, 17], "break": 8, "main": 8, "just": 8, "warn": 8, "differ": 8, "more": 9, "tab": 9, "uniformli": 9, "gcc": 10, "python3": 10, "instal": [10, 15], "usabl": 10, "level": 10, "shown": 10, "path_to_fil": 12, "r": 12, "readlin": 12, "decode_escape_char": 12, "safe": 12, "read": 12, "escap": 12, "repalc": 12, "singl": [12, 17], "thei": 12, "empti": 12, "id_": 12, "arg": 12, "function": 12, "deepcopi": 12, "befor": 12, "now": 12, "asynchron": 12, "copi": 12, "those": 12, "could": 12, "yield": 12, "strang": 12, "lsit": 12, "checked_byt": 13, "stream": 13, "so": [13, 17], "zip": 13, "compress": 13, "to_be_unzipped_byt": 13, "one": 13, "union": 13, "cna": 13, "decompress": 13, "http": [14, 17], "address": 14, "usag": 15, "contextu": 15, "multivari": 15, "optim": 15, "privaci": 15, "resourc": 15, "help": 15, "our": 15, "world": 15, "cythonizedfeatureencod": 15, "gener": 15, "tool": 15, "modul": [15, 16], "search": [15, 17], "page": 15, "packag": 16, "subpackag": 16, "submodul": 16, "content": 16, "readm": 17, "releas": 17, "v8": 17, "immin": 17, "brand": 17, "new": 17, "we": 17, "do": 17, "recommend": 17, "deploi": 17, "v7": 17, "machin": 17, "learn": 17, "platform": 17, "quickli": 17, "app": 17, "person": 17, "io": 17, "android": 17, "immedi": 17, "devic": 17, "zero": 17, "network": 17, "latenc": 17, "cloud": 17, "gym": 17, "updat": 17, "train": 17, "regularli": 17, "sagemak": 17, "pip3": 17, "import": 17, "xxxx": 17, "lambda": 17, "u": 17, "east": 17, "s3": 17, "amazonaw": 17, "com": 17, "greet": 17, "greetings_model": 17, "heart": 17, "statement": 17, "like": 17, "decision_id": 17, "hello": 17, "howdi": 17, "hola": 17, "take": 17, "highest": 17, "condit": 17, "easili": 17, "reinforc": 17, "success": 17, "With": 17, "posit": 17, "outcom": 17, "carrot": 17, "neg": 17, "undesir": 17, "stick": 17, "automat": 17, "unlik": 17, "b": 17, "via": 17, "languag": 17, "cowboi": 17, "would": 17, "choic": 17, "fundament": 17, "task": 17, "engin": 17, "social": 17, "media": 17, "feed": 17, "fast": 17, "perform": 17, "line": 17, "ranked_win": 17, "sommelier_model": 17, "entre": 17, "wine": 17, "when": 17, "call": 17, "decid": 17, "easi": 17, "turn": 17, "databas": 17, "simpli": 17, "column": 17, "row": 17, "conversion_rate_model": 17, "queri": 17, "sort": 17, "descend": 17, "top": 17, "also": 17, "craft": 17, "custom": 17, "algorithm": 17, "supplement": 17, "metric": 17, "multi": 17, "stage": 17, "joint": 17, "multipl": 17, "variabl": 17, "simultan": 17, "often": 17, "configur": 17, "tune": 17, "config": 17, "config_model": 17, "buffer_s": 17, "1024": 17, "2048": 17, "4096": 17, "8192": 17, "video_bitr": 17, "256000": 17, "384000": 17, "512000": 17, "exampl": 17, "notic": 17, "instead": 17, "variat": 17, "jointli": 17, "credit": 17, "recent": 17, "made": 17, "includ": 17, "previou": 17, "session": 17, "data": 17, "arbitrari": 17, "complex": 17, "nest": 17, "assist": 17, "discount": 17, "discounts_model": 17, "3": 17, "enabl": 17, "feature_flag_model": 17, "filter_model": 17, "theme": 17, "font": 17, "helvetica": 17, "size": 17, "12": 17, "color": 17, "000000": 17, "comic": 17, "san": 17, "16": 17, "f0f0f0": 17, "themes_model": 17, "strongli": 17, "never": 17, "identifi": 17, "inform": 17, "pii": 17, "persist": 17, "quick": 17, "start": 17, "guid": 17, "doc": 17, "trainer": 17, "free": 17, "pro": 17, "mission": 17, "corner": 17, "littl": 17, "better": 17, "dai": 17, "whole": 17, "becom": 17, "your": 17, "product": 17, "work": 17, "welcom": 17, "hope": 17, "you": 17, "find": 17, "my": 17, "labor": 17, "love": 17, "justin": 17, "chapwesk": 17}, "objects": {"": [[0, 0, 0, "-", "improveai"]], "improveai": [[1, 0, 0, "-", "chooser"], [2, 0, 0, "-", "cythonized_feature_encoding"], [4, 0, 0, "-", "feature_encoder"], [5, 0, 0, "-", "improve_cli"], [6, 0, 0, "-", "model_based_predictions"], [7, 0, 0, "-", "ranker"], [8, 0, 0, "-", "reward_tracker"], [9, 0, 0, "-", "scorer"], [10, 0, 0, "-", "settings"], [11, 0, 0, "-", "utils"]], "improveai.chooser": [[1, 1, 1, "", "FEATURE_NAMES_METADATA_KEY"], [1, 1, 1, "", "USER_DEFINED_METADATA_KEY"], [1, 2, 1, "", "XGBChooser"]], "improveai.chooser.XGBChooser": [[1, 3, 1, "", "CREATED_AT_METADATA_KEY"], [1, 3, 1, "", "FEATURE_NAMES_METADATA_KEY"], [1, 3, 1, "", "IMPROVE_AI_ALLOWED_MAJOR_VERSION"], [1, 3, 1, "", "MODEL_NAME_METADATA_KEY"], [1, 4, 1, "", "MODEL_NAME_REGEXP"], [1, 3, 1, "", "MODEL_SEED_METADATA_KEY"], [1, 3, 1, "", "REQUIRED_METADATA_KEYS"], [1, 3, 1, "", "STRING_TABLES_METADATA_KEY"], [1, 3, 1, "", "USER_DEFINED_METADATA_KEY"], [1, 3, 1, "", "VERSION_METADATA_KEY"], [1, 5, 1, "", "__init__"], [1, 5, 1, "", "_get_improveai_major_version"], [1, 5, 1, "", "_get_model_feature_names"], [1, 5, 1, "", "_get_model_metadata"], [1, 5, 1, "", "_get_model_name"], [1, 5, 1, "", "_get_model_seed"], [1, 5, 1, "", "_get_noise"], [1, 5, 1, "", "_get_string_tables"], [1, 5, 1, "", "calculate_predictions"], [1, 3, 1, "", "current_noise"], [1, 5, 1, "", "encode_candidates_to_matrix"], [1, 5, 1, "", "encode_candidates_with_context"], [1, 3, 1, "", "feature_encoder"], [1, 3, 1, "", "feature_names"], [1, 5, 1, "", "get_model_src"], [1, 3, 1, "", "imposed_noise"], [1, 3, 1, "", "improveai_major_version_from_metadata"], [1, 5, 1, "", "load_model"], [1, 3, 1, "", "model"], [1, 3, 1, "", "model_metadata"], [1, 3, 1, "", "model_name"], [1, 5, 1, "", "score"]], "improveai.cythonized_feature_encoding": [[3, 0, 0, "-", "cythonized_feature_encoder"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder": [[3, 2, 1, "", "FeatureEncoder"], [3, 2, 1, "", "StringTable"], [3, 6, 1, "", "encode_candidates_to_matrix"], [3, 6, 1, "", "get_mask"], [3, 6, 1, "", "get_noise_shift_scale"], [3, 6, 1, "", "scale"], [3, 6, 1, "", "sprinkle"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder": [[3, 5, 1, "", "__init__"], [3, 5, 1, "", "_encode"], [3, 5, 1, "", "encode_context"], [3, 5, 1, "", "encode_feature_vector"], [3, 5, 1, "", "encode_item"], [3, 4, 1, "", "feature_indexes"], [3, 4, 1, "", "string_tables"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable": [[3, 5, 1, "", "__init__"], [3, 5, 1, "", "encode"], [3, 5, 1, "", "encode_miss"], [3, 4, 1, "", "mask"], [3, 4, 1, "", "miss_width"], [3, 4, 1, "", "model_seed"], [3, 4, 1, "", "value_table"]], "improveai.feature_encoder": [[4, 1, 1, "", "CONTEXT_FEATURE_KEY"], [4, 2, 1, "", "FeatureEncoder"], [4, 1, 1, "", "ITEM_FEATURE_KEY"], [4, 2, 1, "", "StringTable"], [4, 6, 1, "", "get_mask"], [4, 6, 1, "", "get_noise_shift_scale"], [4, 6, 1, "", "scale"], [4, 6, 1, "", "sprinkle"]], "improveai.feature_encoder.FeatureEncoder": [[4, 5, 1, "", "__init__"], [4, 5, 1, "", "_check_into"], [4, 5, 1, "", "_encode"], [4, 5, 1, "", "encode_context"], [4, 5, 1, "", "encode_feature_vector"], [4, 5, 1, "", "encode_item"], [4, 3, 1, "", "feature_indexes"], [4, 3, 1, "", "string_tables"]], "improveai.feature_encoder.StringTable": [[4, 5, 1, "", "__init__"], [4, 5, 1, "", "encode"], [4, 5, 1, "", "encode_miss"], [4, 3, 1, "", "mask"], [4, 3, 1, "", "miss_width"], [4, 3, 1, "", "model_seed"], [4, 3, 1, "", "value_table"]], "improveai.ranker": [[7, 2, 1, "", "Ranker"]], "improveai.ranker.Ranker": [[7, 4, 1, "", "SUPPORTED_CALLS"], [7, 5, 1, "", "__init__"], [7, 3, 1, "", "model_url"], [7, 5, 1, "", "rank"], [7, 3, 1, "", "scorer"]], "improveai.reward_tracker": [[8, 2, 1, "", "RewardTracker"]], "improveai.reward_tracker.RewardTracker": [[8, 3, 1, "", "API_KEY_HEADER"], [8, 3, 1, "", "CONTEXT_KEY"], [8, 3, 1, "", "ITEMS_COUNT_KEY"], [8, 3, 1, "", "ITEM_KEY"], [8, 3, 1, "", "MESSAGE_ID_KEY"], [8, 3, 1, "", "MODEL_KEY"], [8, 3, 1, "", "PAYLOAD_FOR_ERROR_KEY"], [8, 3, 1, "", "REQUEST_ERROR_CODE_KEY"], [8, 3, 1, "", "REWARD_ID_KEY"], [8, 3, 1, "", "REWARD_KEY"], [8, 3, 1, "", "SAMPLE_KEY"], [8, 5, 1, "", "__init__"], [8, 5, 1, "", "_get_sample"], [8, 5, 1, "", "_get_track_body"], [8, 5, 1, "", "_is_valid_message_id"], [8, 5, 1, "", "add_reward"], [8, 3, 1, "", "api_key"], [8, 5, 1, "", "do_post_improve_request"], [8, 3, 1, "", "model_name"], [8, 5, 1, "", "post_improve_request"], [8, 3, 1, "", "threaded_requests"], [8, 5, 1, "", "track"], [8, 3, 1, "", "track_url"], [8, 5, 1, "", "track_with_sample"]], "improveai.scorer": [[9, 2, 1, "", "Scorer"]], "improveai.scorer.Scorer": [[9, 3, 1, "", "TIEBREAKER_MULTIPLIER"], [9, 5, 1, "", "__init__"], [9, 3, 1, "", "chooser"], [9, 3, 1, "", "model_url"], [9, 5, 1, "", "score"]], "improveai.settings": [[10, 1, 1, "", "CYTHON_BACKEND_AVAILABLE"], [10, 1, 1, "", "DEBUG"], [10, 6, 1, "", "gcc_and_py3_dev_installed"]], "improveai.utils": [[12, 0, 0, "-", "general_purpose_tools"], [13, 0, 0, "-", "gzip_tools"], [14, 0, 0, "-", "url_tools"]], "improveai.utils.general_purpose_tools": [[12, 6, 1, "", "check_candidates"], [12, 6, 1, "", "deepcopy_args"], [12, 6, 1, "", "is_valid_ksuid"], [12, 6, 1, "", "read_jsonstring_from_file"]], "improveai.utils.gzip_tools": [[13, 6, 1, "", "check_and_get_unzipped_model"], [13, 6, 1, "", "get_unzipped_gz"], [13, 6, 1, "", "is_gz_bytes"]], "improveai.utils.url_tools": [[14, 6, 1, "", "get_model_bytes_from_url"], [14, 6, 1, "", "is_path_http_addr"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:property", "4": "py:attribute", "5": "py:method", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "function", "Python function"]}, "titleterms": {"improveai": [0, 2, 11, 16], "packag": [0, 2, 11], "subpackag": 0, "submodul": [0, 2, 11], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "content": [0, 2, 11], "chooser": 1, "py": [1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14], "cythonized_feature_encod": [2, 3], "pyx": 3, "feature_encod": 4, "improve_cli": 5, "model_based_predict": 6, "ranker": [7, 15], "reward_track": 8, "scorer": 9, "set": 10, "util": [11, 15], "general_purpose_tool": 12, "gzip_tool": 13, "url_tool": 14, "welcom": 15, "improv": [15, 17], "ai": 15, "python": 15, "document": 15, "readm": 15, "class": 15, "indic": 15, "tabl": 15, "instal": 17, "initi": 17, "usag": 17, "contextu": 17, "decis": 17, "rank": 17, "score": 17, "multivari": 17, "optim": 17, "variant": 17, "type": 17, "privaci": 17, "resourc": 17, "help": 17, "our": 17, "world": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"improveai package": [[0, "improveai-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [11, "submodules"]], "Module contents": [[0, "module-improveai"], [2, "module-improveai.cythonized_feature_encoding"], [11, "module-improveai.utils"]], "chooser.py module": [[1, "module-improveai.chooser"]], "improveai.cythonized_feature_encoding package": [[2, "improveai-cythonized-feature-encoding-package"]], "cythonized_feature_encoder.pyx module": [[3, "module-improveai.cythonized_feature_encoding.cythonized_feature_encoder"]], "feature_encoder.py module": [[4, "module-improveai.feature_encoder"]], "improve_cli.py module": [[5, "module-improveai.improve_cli"]], "model_based_predictions.py module": [[6, "module-improveai.model_based_predictions"]], "ranker.py module": [[7, "module-improveai.ranker"]], "reward_tracker.py module": [[8, "module-improveai.reward_tracker"]], "scorer.py module": [[9, "module-improveai.scorer"]], "settings.py module": [[10, "module-improveai.settings"]], "improveai.utils package": [[11, "improveai-utils-package"]], "general_purpose_tools.py module": [[12, "module-improveai.utils.general_purpose_tools"]], "gzip_tools.py module": [[13, "module-improveai.utils.gzip_tools"]], "url_tools.py module": [[14, "module-improveai.utils.url_tools"]], "Welcome to Improve AI python ranker documentation!": [[15, "welcome-to-improve-ai-python-ranker-documentation"]], "Readme:": [[15, null]], "Classes:": [[15, null]], "Utils:": [[15, null]], "Indices and tables": [[15, "indices-and-tables"]], "improveai": [[16, "improveai"]], "Installation": [[17, "installation"]], "Initialization": [[17, "initialization"]], "Usage": [[17, "usage"]], "Contextual Decisions": [[17, "contextual-decisions"]], "Ranking": [[17, "ranking"]], "Scoring": [[17, "scoring"]], "Multivariate Optimization": [[17, "multivariate-optimization"]], "Variant Types": [[17, "variant-types"]], "Privacy": [[17, "privacy"]], "Resources": [[17, "resources"]], "Help Improve Our World": [[17, "help-improve-our-world"]]}, "indexentries": {"improveai": [[0, "module-improveai"]], "module": [[0, "module-improveai"], [1, "module-improveai.chooser"], [2, "module-improveai.cythonized_feature_encoding"], [3, "module-improveai.cythonized_feature_encoding.cythonized_feature_encoder"], [4, "module-improveai.feature_encoder"], [5, "module-improveai.improve_cli"], [6, "module-improveai.model_based_predictions"], [7, "module-improveai.ranker"], [8, "module-improveai.reward_tracker"], [9, "module-improveai.scorer"], [10, "module-improveai.settings"], [11, "module-improveai.utils"], [12, "module-improveai.utils.general_purpose_tools"], [13, "module-improveai.utils.gzip_tools"], [14, "module-improveai.utils.url_tools"]], "created_at_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.CREATED_AT_METADATA_KEY"]], "feature_names_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.FEATURE_NAMES_METADATA_KEY"]], "feature_names_metadata_key (in module improveai.chooser)": [[1, "improveai.chooser.FEATURE_NAMES_METADATA_KEY"]], "improve_ai_allowed_major_version (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.IMPROVE_AI_ALLOWED_MAJOR_VERSION"]], "model_name_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.MODEL_NAME_METADATA_KEY"]], "model_name_regexp (xgbchooser attribute)": [[1, "improveai.chooser.XGBChooser.MODEL_NAME_REGEXP"]], "model_seed_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.MODEL_SEED_METADATA_KEY"]], "required_metadata_keys (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.REQUIRED_METADATA_KEYS"]], "string_tables_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.STRING_TABLES_METADATA_KEY"]], "user_defined_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.USER_DEFINED_METADATA_KEY"]], "user_defined_metadata_key (in module improveai.chooser)": [[1, "improveai.chooser.USER_DEFINED_METADATA_KEY"]], "version_metadata_key (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.VERSION_METADATA_KEY"]], "xgbchooser (class in improveai.chooser)": [[1, "improveai.chooser.XGBChooser"]], "__init__() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.__init__"]], "_get_improveai_major_version() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_improveai_major_version"]], "_get_model_feature_names() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_feature_names"]], "_get_model_metadata() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_metadata"]], "_get_model_name() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_name"]], "_get_model_seed() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_model_seed"]], "_get_noise() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_noise"]], "_get_string_tables() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser._get_string_tables"]], "calculate_predictions() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.calculate_predictions"]], "current_noise (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.current_noise"]], "encode_candidates_to_matrix() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.encode_candidates_to_matrix"]], "encode_candidates_with_context() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.encode_candidates_with_context"]], "feature_encoder (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.feature_encoder"]], "feature_names (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.feature_names"]], "get_model_src() (xgbchooser static method)": [[1, "improveai.chooser.XGBChooser.get_model_src"]], "imposed_noise (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.imposed_noise"]], "improveai.chooser": [[1, "module-improveai.chooser"]], "improveai_major_version_from_metadata (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.improveai_major_version_from_metadata"]], "load_model() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.load_model"]], "model (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.model"]], "model_metadata (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.model_metadata"]], "model_name (xgbchooser property)": [[1, "improveai.chooser.XGBChooser.model_name"]], "score() (xgbchooser method)": [[1, "improveai.chooser.XGBChooser.score"]], "improveai.cythonized_feature_encoding": [[2, "module-improveai.cythonized_feature_encoding"]], "featureencoder (class in improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder"]], "stringtable (class in improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable"]], "__init__() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.__init__"], [4, "improveai.feature_encoder.FeatureEncoder.__init__"]], "__init__() (stringtable method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.__init__"], [4, "improveai.feature_encoder.StringTable.__init__"]], "_encode() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder._encode"], [4, "improveai.feature_encoder.FeatureEncoder._encode"]], "encode() (stringtable method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.encode"], [4, "improveai.feature_encoder.StringTable.encode"]], "encode_candidates_to_matrix() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.encode_candidates_to_matrix"]], "encode_context() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.encode_context"], [4, "improveai.feature_encoder.FeatureEncoder.encode_context"]], "encode_feature_vector() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.encode_feature_vector"], [4, "improveai.feature_encoder.FeatureEncoder.encode_feature_vector"]], "encode_item() (featureencoder method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.encode_item"], [4, "improveai.feature_encoder.FeatureEncoder.encode_item"]], "encode_miss() (stringtable method)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.encode_miss"], [4, "improveai.feature_encoder.StringTable.encode_miss"]], "feature_indexes (featureencoder attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.feature_indexes"]], "get_mask() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.get_mask"]], "get_noise_shift_scale() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.get_noise_shift_scale"]], "improveai.cythonized_feature_encoding.cythonized_feature_encoder": [[3, "module-improveai.cythonized_feature_encoding.cythonized_feature_encoder"]], "mask (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.mask"]], "miss_width (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.miss_width"]], "model_seed (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.model_seed"]], "scale() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.scale"]], "sprinkle() (in module improveai.cythonized_feature_encoding.cythonized_feature_encoder)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.sprinkle"]], "string_tables (featureencoder attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.FeatureEncoder.string_tables"]], "value_table (stringtable attribute)": [[3, "improveai.cythonized_feature_encoding.cythonized_feature_encoder.StringTable.value_table"]], "context_feature_key (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.CONTEXT_FEATURE_KEY"]], "featureencoder (class in improveai.feature_encoder)": [[4, "improveai.feature_encoder.FeatureEncoder"]], "item_feature_key (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.ITEM_FEATURE_KEY"]], "stringtable (class in improveai.feature_encoder)": [[4, "improveai.feature_encoder.StringTable"]], "_check_into() (featureencoder method)": [[4, "improveai.feature_encoder.FeatureEncoder._check_into"]], "feature_indexes (featureencoder property)": [[4, "improveai.feature_encoder.FeatureEncoder.feature_indexes"]], "get_mask() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.get_mask"]], "get_noise_shift_scale() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.get_noise_shift_scale"]], "improveai.feature_encoder": [[4, "module-improveai.feature_encoder"]], "mask (stringtable property)": [[4, "improveai.feature_encoder.StringTable.mask"]], "miss_width (stringtable property)": [[4, "improveai.feature_encoder.StringTable.miss_width"]], "model_seed (stringtable property)": [[4, "improveai.feature_encoder.StringTable.model_seed"]], "scale() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.scale"]], "sprinkle() (in module improveai.feature_encoder)": [[4, "improveai.feature_encoder.sprinkle"]], "string_tables (featureencoder property)": [[4, "improveai.feature_encoder.FeatureEncoder.string_tables"]], "value_table (stringtable property)": [[4, "improveai.feature_encoder.StringTable.value_table"]], "improveai.improve_cli": [[5, "module-improveai.improve_cli"]], "improveai.model_based_predictions": [[6, "module-improveai.model_based_predictions"]], "ranker (class in improveai.ranker)": [[7, "improveai.ranker.Ranker"]], "supported_calls (ranker attribute)": [[7, "improveai.ranker.Ranker.SUPPORTED_CALLS"]], "__init__() (ranker method)": [[7, "improveai.ranker.Ranker.__init__"]], "improveai.ranker": [[7, "module-improveai.ranker"]], "model_url (ranker property)": [[7, "improveai.ranker.Ranker.model_url"]], "rank() (ranker method)": [[7, "improveai.ranker.Ranker.rank"]], "scorer (ranker property)": [[7, "improveai.ranker.Ranker.scorer"]], "api_key_header (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.API_KEY_HEADER"]], "context_key (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.CONTEXT_KEY"]], "items_count_key (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.ITEMS_COUNT_KEY"]], "item_key (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.ITEM_KEY"]], "message_id_key (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.MESSAGE_ID_KEY"]], "model_key (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.MODEL_KEY"]], "payload_for_error_key (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.PAYLOAD_FOR_ERROR_KEY"]], "request_error_code_key (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.REQUEST_ERROR_CODE_KEY"]], "reward_id_key (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.REWARD_ID_KEY"]], "reward_key (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.REWARD_KEY"]], "rewardtracker (class in improveai.reward_tracker)": [[8, "improveai.reward_tracker.RewardTracker"]], "sample_key (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.SAMPLE_KEY"]], "__init__() (rewardtracker method)": [[8, "improveai.reward_tracker.RewardTracker.__init__"]], "_get_sample() (rewardtracker method)": [[8, "improveai.reward_tracker.RewardTracker._get_sample"]], "_get_track_body() (rewardtracker method)": [[8, "improveai.reward_tracker.RewardTracker._get_track_body"]], "_is_valid_message_id() (rewardtracker method)": [[8, "improveai.reward_tracker.RewardTracker._is_valid_message_id"]], "add_reward() (rewardtracker method)": [[8, "improveai.reward_tracker.RewardTracker.add_reward"]], "api_key (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.api_key"]], "do_post_improve_request() (rewardtracker method)": [[8, "improveai.reward_tracker.RewardTracker.do_post_improve_request"]], "improveai.reward_tracker": [[8, "module-improveai.reward_tracker"]], "model_name (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.model_name"]], "post_improve_request() (rewardtracker method)": [[8, "improveai.reward_tracker.RewardTracker.post_improve_request"]], "threaded_requests (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.threaded_requests"]], "track() (rewardtracker method)": [[8, "improveai.reward_tracker.RewardTracker.track"]], "track_url (rewardtracker property)": [[8, "improveai.reward_tracker.RewardTracker.track_url"]], "track_with_sample() (rewardtracker method)": [[8, "improveai.reward_tracker.RewardTracker.track_with_sample"]], "scorer (class in improveai.scorer)": [[9, "improveai.scorer.Scorer"]], "tiebreaker_multiplier (scorer property)": [[9, "improveai.scorer.Scorer.TIEBREAKER_MULTIPLIER"]], "__init__() (scorer method)": [[9, "improveai.scorer.Scorer.__init__"]], "chooser (scorer property)": [[9, "improveai.scorer.Scorer.chooser"]], "improveai.scorer": [[9, "module-improveai.scorer"]], "model_url (scorer property)": [[9, "improveai.scorer.Scorer.model_url"]], "score() (scorer method)": [[9, "improveai.scorer.Scorer.score"]], "cython_backend_available (in module improveai.settings)": [[10, "improveai.settings.CYTHON_BACKEND_AVAILABLE"]], "debug (in module improveai.settings)": [[10, "improveai.settings.DEBUG"]], "gcc_and_py3_dev_installed() (in module improveai.settings)": [[10, "improveai.settings.gcc_and_py3_dev_installed"]], "improveai.settings": [[10, "module-improveai.settings"]], "improveai.utils": [[11, "module-improveai.utils"]], "check_candidates() (in module improveai.utils.general_purpose_tools)": [[12, "improveai.utils.general_purpose_tools.check_candidates"]], "deepcopy_args() (in module improveai.utils.general_purpose_tools)": [[12, "improveai.utils.general_purpose_tools.deepcopy_args"]], "improveai.utils.general_purpose_tools": [[12, "module-improveai.utils.general_purpose_tools"]], "is_valid_ksuid() (in module improveai.utils.general_purpose_tools)": [[12, "improveai.utils.general_purpose_tools.is_valid_ksuid"]], "read_jsonstring_from_file() (in module improveai.utils.general_purpose_tools)": [[12, "improveai.utils.general_purpose_tools.read_jsonstring_from_file"]], "check_and_get_unzipped_model() (in module improveai.utils.gzip_tools)": [[13, "improveai.utils.gzip_tools.check_and_get_unzipped_model"]], "get_unzipped_gz() (in module improveai.utils.gzip_tools)": [[13, "improveai.utils.gzip_tools.get_unzipped_gz"]], "improveai.utils.gzip_tools": [[13, "module-improveai.utils.gzip_tools"]], "is_gz_bytes() (in module improveai.utils.gzip_tools)": [[13, "improveai.utils.gzip_tools.is_gz_bytes"]], "get_model_bytes_from_url() (in module improveai.utils.url_tools)": [[14, "improveai.utils.url_tools.get_model_bytes_from_url"]], "improveai.utils.url_tools": [[14, "module-improveai.utils.url_tools"]], "is_path_http_addr() (in module improveai.utils.url_tools)": [[14, "improveai.utils.url_tools.is_path_http_addr"]]}})