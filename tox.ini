[tox]
envlist = py3

ignored_dir_01=alter_py
ignored_dir_02=improveai/tests/decisions

pkg_dir=improveai
[testenv:py3]

setenv =
;    MODEL_KIND = mlmodel
;    MODEL_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/models/meditations.mlmodel
    MODEL_KIND = xgb_native
    MODEL_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/models/12_11_2020_verses_conv.xgb
    CONTEXT_JSON_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/test_artifacts/sorting_context.json
    VARIANTS_JSON_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/test_artifacts/meditations.json

    MODEL_SEED_TRACKS = 9
    MODEL_SEED_NOT_TRACKS = 0
    SCORES_SEED = 1
    RANKED_SEED = 2
    BEST_SEED = 3

    SAMPLE_METHOD_CALL_SEED = 4

    VARIANTS_FOR_MODEL_SCORES_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/data/test/test_variants_for_model_scores.json
    RANKED_VARIANTS_FOR_MODEL_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/data/test/test_ranked_variants_for_model.json

    SCORES_FOR_MODEL_SCORES_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/data/test/test_variants_scores.json
    RANKED_SCORES_FOR_MODEL_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/data/test/test_variants_ranked.json

    MAX_RUNNERS_UP_TEST_VAL = 10

    DECISION_TRACKER_TESTS_MODEL_KIND = xgb_native
    DECISION_TRACKER_TESTS_VARIANTS_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/data/test/test_variants_for_sample.json
    DECISION_TRACKER_TESTS_BEST_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/data/test/test_sample_no_runners_up_best_variant.json
    DECISION_TRACKER_TESTS_SAMPLE_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/data/test/test_sample_no_runners_up_chosen_sample.json
    DECISION_TRACKER_TESTS_SAMPLE_W_RUNNERS_UP_W_MODEL_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/data/test/test_sample_w_runners_up_w_model.json
    DECISION_TRACKER_TESTS_SAMPLE_W_RUNNERS_UP_NO_MODEL_PTH = {toxinidir}/{[tox]pkg_dir}/artifacts/data/test/test_sample_w_runners_up_no_model.json

    DUMMY_TEST_TRACK_URL = dummy.track.url
    DUMMY_TEST_API_KEY = dummy_key

    ; feature encoder test params
    V6_DUMMY_MODEL_PATH = {toxinidir}/{[tox]pkg_dir}/artifacts/models/dummy_v6.xgb

    V6_FEATURE_ENCODER_MODEL_SEED = 1
    V6_FEATURE_ENCODER_NOISE_SEED = 6
    V6_FEATURE_ENCODER_CONTEXT_TYPEERROR_MSG = Only dict type is supported for context encoding

    V6_FEATURE_ENCODER_TEST_SUITE_JSONS_DIR = {toxinidir}/{[tox]pkg_dir}/artifacts/data/test/v6_tests/feature_encoder/test_suite
    V6_FEATURE_ENCODER_TEST_PYTHON_SPECIFIC_JSONS_DIR = {toxinidir}/{[tox]pkg_dir}/artifacts/data/test/v6_tests/feature_encoder/python_specific

    V6_FEATURE_ENCODER_TEST_BIG_FLOAT_JSON = big_float.json

    V6_FEATURE_ENCODER_TEST_SMALL_FLOAT_JSON = small_float.json

    V6_FEATURE_ENCODER_TEST_BIG_INT_NEGATIVE_JSON = big_int_negative.json

    V6_FEATURE_ENCODER_TEST_BIG_INT_POSITIVE_JSON = big_int_positive.json

    V6_FEATURE_ENCODER_TEST_BOOL_FALSE_JSON = bool_false.json

    V6_FEATURE_ENCODER_TEST_BOOL_TRUE_JSON = bool_true.json

    V6_FEATURE_ENCODER_TEST_FLOAT_0_JSON = float_0.json

    V6_FEATURE_ENCODER_TEST_FLOAT_1_JSON = float_1.json

    V6_FEATURE_ENCODER_TEST_FLOAT_M1_JSON = float_m1.json

    V6_FEATURE_ENCODER_TEST_FOO_BAR_JSON = foo_bar.json

    V6_FEATURE_ENCODER_TEST_INT_0_JSON = int_0.json

    V6_FEATURE_ENCODER_TEST_INT_1_JSON = int_1.json

    V6_FEATURE_ENCODER_TEST_INT_M1_JSON = int_m1.json

    V6_FEATURE_ENCODER_TEST_STRING_JSON = string.json

    ; primitive dicts
    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_BIG_FLOAT_JSON = primitive_dict_big_float.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_SMALL_FLOAT_JSON = primitive_dict_small_float.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_BIG_INT_NEGATIVE_JSON = primitive_dict_big_int_negative.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_BIG_INT_POSITIVE_JSON = primitive_dict_big_int_positive.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_BOOL_FALSE_JSON = primitive_dict_bool_false.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_BOOL_TRUE_JSON = primitive_dict_bool_true.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_FLOAT_0_JSON = primitive_dict_float_0.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_FLOAT_1_JSON = primitive_dict_float_1.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_FLOAT_M1_JSON = primitive_dict_float_m1.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_FOO_BAR_JSON = primitive_dict_foo_bar.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_INT_0_JSON = primitive_dict_int_0.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_INT_1_JSON = primitive_dict_int_1.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_INT_M1_JSON = primitive_dict_int_m1.json

    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_STRING_JSON = primitive_dict_string.json

    ; nested lists and dicts files
    V6_FEATURE_ENCODER_TEST_NESTED_LIST_JSON = nested_list.json

    V6_FEATURE_ENCODER_TEST_NESTED_DICT_STRING_KEYS_JSON = nested_dict_string_keys.json

    ; foo bar dict files
    V6_FEATURE_ENCODER_TEST_DICT_FOO_BAR_JSON = dict_foo_bar.json

    ; Added on 16.04.2021
    V6_FEATURE_ENCODER_TEST_NOISE_0_WITH_STRING_JSON = noise_0_string.json
    V6_FEATURE_ENCODER_TEST_NOISE_1_WITH_STRING_JSON = noise_1_string.json

    ; Added on 16.04.2021
    V6_FEATURE_ENCODER_TEST_SPECIAL_CHARACTERS_STRING_JSON = special_characters_string.json
    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_SPECIAL_CHARACTERS_STRING_JSON = primitive_dict_special_characters_string.json
    
    V6_FEATURE_ENCODER_TEST_SPECIAL_CHARACTERS_IN_KEY_STRING_JSON = special_characters_in_key_string.json
    
    V6_FEATURE_ENCODER_TEST_UNICODE_EMOJI_01_JSON = unicode_emoji_01.json
    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_UNICODE_EMOJI_01_JSON = primitive_dict_unicode_emoji_01.json

    V6_FEATURE_ENCODER_TEST_UNICODE_EMOJI_02_JSON = unicode_emoji_02.json
    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_UNICODE_EMOJI_02_JSON = primitive_dict_unicode_emoji_02.json

    V6_FEATURE_ENCODER_TEST_UNICODE_EMOJI_IN_KEY_JSON = unicode_emoji_in_key.json
    
    V6_FEATURE_ENCODER_TEST_UNICODE_STRING_01_JSON = unicode_string_01.json
    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_UNICODE_STRING_01_JSON = primitive_dict_unicode_string_01.json

    V6_FEATURE_ENCODER_TEST_UNICODE_STRING_02_JSON = unicode_string_02.json
    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_UNICODE_STRING_02_JSON = primitive_dict_unicode_string_02.json
    
    V6_FEATURE_ENCODER_TEST_UNICODE_STRING_WITH_U0000_JSON = unicode_string_with_u0000.json
    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_UNICODE_STRING_WITH_U0000_JSON = primitive_dict_unicode_string_with_u0000.json    
    
    V6_FEATURE_ENCODER_TEST_UNICODE_U0000_JSON = unicode_u0000.json
    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_UNICODE_U0000_JSON = primitive_dict_unicode_u0000.json

    V6_FEATURE_ENCODER_TEST_ZERO_LENGTH_STRING_JSON = zero_length_string.json
    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_ZERO_LENGTH_STRING_JSON = primitive_dict_zero_length_string.json

    V6_FEATURE_ENCODER_TEST_NEWLINE_TAB_RETURN_SYMBOLS_STRING_JSON = newline_tab_return_symbols_string.json
    V6_FEATURE_ENCODER_TEST_PRIMITIVE_DICT_NEWLINE_TAB_RETURN_SYMBOLS_STRING_JSON = primitive_dict_newline_tab_return_symbols_string.json


    ; batch encoding tests
    ; test_batch_encoding_jsonlies_input.json
    V6_FEATURE_ENCODER_TEST_BATCH_ENCODING_JSONLINES = test_batch_encoding_jsonlies.json

    V6_FEATURE_ENCODER_TEST_BATCH_ENCODING_INPUT_JSONLINES = test_batch_encoding_jsonlies_input.json

    V6_FEATURE_ENCODER_TEST_BATCH_FILLING_MISSING_FEATURES = test_batch_filling_missing_features.json

    ; Since the return for empty inputs is always expected to be {} there is no
    ; need to differentiate between variant and context encoding output
    V6_FEATURE_ENCODER_TEST_NONE_JSON = none.json

    V6_FEATURE_ENCODER_TEST_EMPTY_LIST_JSON = empty_list.json

    V6_FEATURE_ENCODER_TEST_EMPTY_DICT_JSON = empty_dict.json

    V6_FEATURE_ENCODER_TEST_NAN_JSON = npnan.json

    ; collisions tests
    V6_FEATURE_ENCODER_TEST_EXTERNAL_COLLISIONS_01_JSON = external_collisions_01.json
    V6_FEATURE_ENCODER_TEST_EXTERNAL_COLLISIONS_02_JSON = external_collisions_02.json

    V6_FEATURE_ENCODER_TEST_INTERNAL_COLLISIONS_01_JSON = internal_collisions_01.json
    V6_FEATURE_ENCODER_TEST_INTERNAL_COLLISIONS_02_JSON = internal_collisions_02.json
    V6_FEATURE_ENCODER_TEST_INTERNAL_COLLISIONS_03_JSON = internal_collisions_03.json

    PYTEST_ADDOPTS=--ignore={[tox]ignored_dir_01} --ignore={[tox]ignored_dir_02}

deps = -rrequirements.txt

commands =
    {envbindir}/pytest

; --ignore={toxinidir}/improveai/tests/decisions/test_decision_v6.py --ignore={toxinidir}/improveai/tests/decisions/test_sample.py
